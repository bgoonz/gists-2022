1. Use JSX ShortHandTry to use JSX shorthand for passing boolean variables. Let’s say you want to control the title visibility of a Navbar component.BadGood2. Use Ternary OperatorsLet’s say you want to show a particular user’s details based on role.BadGood3. Take Advantage of Object LiteralsObject literals can help make our code more readable. Let’s say you want to show three types of users based on their role. You can’t use ternary because the number of options is greater than two.BadGoodIt looks much better now.4. Use FragmentsAlways use Fragment over Div. It keeps the code clean and is also beneficial for performance because one less node is created in the virtual DOM.BadGood5. Don't Define a Function Inside RenderDon’t define a function inside render. Try to keep the logic inside render to an absolute minimum.BadGood6. Use MemoReact.PureComponent and Memo can significantly improve the performance of your application. They help us to avoid unnecessary rendering.BadAlthough the child component should render only once because the value of count has nothing to do with the ChildComponent . But, it renders each time you click on the button.OutputGoodLet’s edit the ChildrenComponent to this:Now no matter how many times you click on the button, it will render only when necessary.7. Put CSS in JavaScriptTry to avoid raw JavaScript when you are writing React applications because organizing CSS is far harder than organizing JS.BadGood8. Use Object DestructuringUse object destructuring to your advantage. Let’s say you need to show a user’s details.BadGood9. String Props Don’t Need Curly BracesWhen passing string props to a children component.BadGood10. Remove JS Code From JSXMove any JS code out of JSX if that doesn’t serve any purpose of rendering or UI functionality.BadGood11. Use Template LiteralsUse template literals to build large strings. Avoid using string concatenation. It’s nice and clean.BadGood12. Import in OrderAlways try to import things in a certain order. It improves code readability.BadGoodThe rule of thumb is to keep the import order like this:Built-inExternalInternalSo the example above becomes:13. Use Implicit returnUse the JavaScript feature of implicit return to write beautiful code. Let’s say your function does a simple calculation and returns the result.BadGood14. Component NamingAlways use PascalCase for components and camelCase for instances.BadGood15. Reserved Prop NamingDon’t use DOM component prop names for passing props between components because others might not expect these names.BadGood16. QuotesUse double quotes for JSX attributes and single quotes for all other JS.BadGood17. Prop NamingAlways use camelCase for prop names or PascalCase if the prop value is a React component.BadGood18. JSX in ParenthesesIf your component spans more than one line, always wrap it in parentheses.BadGood19. Self-Closing TagsIf your component doesn’t have any children, then use self-closing tags. It improves readability.BadGood20. Underscore in Method NameDo not use underscores in any internal React method.BadGood21. Alt PropAlways include an alt prop in your <img > tags. And don’t use picture or image in your alt property because the screenreaders already announce img elements as images. No need to include that.BadGood