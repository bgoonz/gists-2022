{
  "user": {
    "id": 45455,
    "name": "Bryan C Guner",
    "email": "bryan.guner@gmail.com",
    "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
    "nickname": "bgoonz",
    "provider": "github"
  },
  "personalLibrary": {
    "id": 49329,
    "guid": "9329f0ac24e8b6ec1373",
    "createdAt": "2021-05-02T06:26:00Z",
    "updatedAt": "2021-07-29T09:29:24Z",
    "snippets": [
      {
        "id": 1060449,
        "guid": "a248a8d3dc74a340e632",
        "title": "react-appendix.md",
        "description": "",
        "isPrivate": true,
        "createdAt": "2021-07-29T09:29:24Z",
        "updatedAt": "2021-07-29T09:29:25Z",
        "gistId": "c7dfbadba2483234ee73b722edb94a5d",
        "gistboxId": null,
        "syncToGist": true,
        "gistUpdatedAt": "2021-07-29T09:29:24Z",
        "pagePermission": null,
        "starredBy": [],
        "createdBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "lastUpdatedBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "files": [
          {
            "id": 1565170,
            "guid": "83fdf0dfa50d589bcf93",
            "filename": "react-appendix.md",
            "filetype": "markdown",
            "content": "This appendix is a non-exhaustive list of new syntactic features and methods that were added to JavaScript in ES6. These features are the most commonly used and most helpful.\n\nWhile this appendix doesn't cover ES6 classes, we go over the basics while learning about components in the book. In addition, this appendix doesn't include descriptions of some larger new features like promises and generators. If you'd like more info on those or on any topic below, we encourage you to reference the [Mozilla Developer Network's website](https://developer.mozilla.org/) (MDN).\n\n### Prefer `const` and `let` over `var`\n\nIf you've worked with ES5 JavaScript before, you're likely used to seeing variables declared with `var`:\n\n  \n\n```js\nvar myVariable = 5;\n```\n\nBoth the `const` and `let` statements also declare variables. They were introduced in ES6.\n\nUse `const` in cases where a variable is never re-assigned. Using `const` makes this clear to whoever is reading your code. It refers to the \"constant\" state of the variable in the context it is defined within.\n\nIf the variable will be re-assigned, use `let`.\n\nWe encourage the use of `const` and `let` instead of `var`. In addition to the restriction introduced by `const`, both `const` and `let` are _block scoped_ as opposed to _function scoped_. This scoping can help avoid unexpected bugs.\n\n### Arrow functions\n\nThere are three ways to write arrow function bodies. For the examples below, let's say we have an array of city objects:\n\n  \n\n```js\nonst cities = [\n  { name: 'Cairo', pop: 7764700 },\n  { name: 'Lagos', pop: 8029200 },\n];\n```\n\nIf we write an arrow function that spans multiple lines, we must use braces to delimit the function body like this:\n\n  \n\n```js\nconst formattedPopulations = cities.map((city) =\u003e {\n  const popMM = (city.pop / 1000000).toFixed(2);\n  return popMM + ' million';\n});\nconsole.log(formattedPopulations);\n\n```\n\nNote that we must also explicitly specify a `return` for the function.\n\nHowever, if we write a function body that is only a single line (or single expression) we can use parentheses to delimit it:\n\n  \n\n```js\nconst formattedPopulations2 = cities.map((city) =\u003e (\n  (city.pop / 1000000).toFixed(2) + ' million'\n));\n```\n\nNotably, we don't use `return` as it's implied.\n\nFurthermore, if your function body is terse you can write it like so:\n\n  \n\n```js\nconst pops = cities.map(city =\u003e city.pop);\nconsole.log(pops);\n\n```\n\nThe terseness of arrow functions is one of two reasons that we use them. Compare the one-liner above to this:\n\n  \n\n```js\nconst popsNoArrow = cities.map(function(city) { return city.pop });\n```\n\nOf greater benefit, though, is how arrow functions bind the `this` object.\n\nThe traditional JavaScript function declaration syntax (`function () {}`) will bind `this` in anonymous functions to the global object. To illustrate the confusion this causes, consider the following example:\n\n  \n\n```js\nunction printSong() {\n  console.log(\"Oops - The Global Object\");\n}\n\nconst jukebox = {\n  songs: [\n    {\n      title: \"Wanna Be Startin' Somethin'\",\n      artist: \"Michael Jackson\",\n    },\n    {\n      title: \"Superstar\",\n      artist: \"Madonna\",\n    },\n  ],\n  printSong: function (song) {\n    console.log(song.title + \" - \" + song.artist);\n  },\n  printSongs: function () {\n    \n    this.songs.forEach(function(song) {\n      \n      this.printSong(song);\n    });\n  },\n}\n\njukebox.printSongs();\n\n\n```\n\nThe method `printSongs()` iterates over `this.songs` with `forEach()`. In this context, `this` is bound to the object (`jukebox`) as expected. However, the anonymous function passed to `forEach()` binds its internal `this` to the global object. As such, `this.printSong(song)` calls the function declared at the top of the example, _not_ the method on `jukebox`.\n\nJavaScript developers have traditionally used workarounds for this behavior, but arrow functions solve the problem by **capturing the `this` value of the enclosing context**. Using an arrow function for `printSongs()` has the expected result:\n\n  \n\n```js\n  printSongs: function () {\n    this.songs.forEach((song) =\u003e {\n      \n      this.printSong(song);\n    });\n  },\n}\n\njukebox.printSongs();\n\n\n```\n\nFor this reason, throughout the book we use arrow functions for all anonymous functions.\n\n### Modules\n\nES6 formally supports modules using the `import`/`export` syntax.\n\n**Named exports**\n\nInside any file, you can use `export` to specify a variable the module should expose. Here's an example of a file that exports two functions:\n\n  \n\n```js\n\n\nexport const sayHi = () =\u003e (console.log('Hi!'));\nexport const sayBye = () =\u003e (console.log('Bye!'));\n\nconst saySomething = () =\u003e (console.log('Something!'));\n```\n\nNow, anywhere we wanted to use these functions we could use `import`. We need to specify which functions we want to import. A common way of doing this is using ES6's destructuring assignment syntax to list them out like this:\n\n  \n\n```js\n\n\nimport { sayHi, sayBye } from './greetings';\n\nsayHi(); \nsayBye(); \n```\n\nImportantly, the function that was _not_ exported (`saySomething`) is unavailable outside of the module.\n\nAlso note that we supply a **relative path** to `from`, indicating that the ES6 module is a local file as opposed to an npm package.\n\nInstead of inserting an `export` before each variable you'd like to export, you can use this syntax to list off all the exposed variables in one area:\n\n  \n\n```js\n\n\nconst sayHi = () =\u003e (console.log('Hi!'));\nconst sayBye = () =\u003e (console.log('Bye!'));\n\nconst saySomething = () =\u003e (console.log('Something!'));\n\nexport { sayHi, sayBye };\n```\n\nWe can also specify that we'd like to import all of a module's functionality underneath a given namespace with the `import * as \u003cNamespace\u003e` syntax:\n\n  \n\n```js\n\n\nimport * as Greetings from './greetings';\n\nGreetings.sayHi();\n  \nGreetings.sayBye();\n  \nGreetings.saySomething();\n  \n```\n\n**Default export**\n\nThe other type of export is a default export. A module can only contain one default export:\n\n  \n\n```js\n\n\nconst sayHi = () =\u003e (console.log('Hi!'));\nconst sayBye = () =\u003e (console.log('Bye!'));\n\nconst saySomething = () =\u003e (console.log('Something!'));\n\nconst Greetings = { sayHi, sayBye };\n\nexport default Greetings;\n```\n\nThis is a common pattern for libraries. It means you can easily import the library wholesale without specifying what individual functions you want:\n\n  \n\n```js\n\n\nimport Greetings from './greetings';\n\nGreetings.sayHi(); \nGreetings.sayBye(); \n```\n\nIt's not uncommon for a module to use a mix of both named exports and default exports. For instance, with `react-dom`, you can import `ReactDOM` (a default export) like this:\n\n  \n\n```js\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n  \n);\n```\n\nOr, if you're only going to use the `render()` function, you can import the named `render()` function like this:\n\n  \n\n```js\nimport { render } from 'react-dom';\n\nrender(\n  \n);\n```\n\nTo achieve this flexibility, the export implementation for `react-dom` looks something like this:\n\n  \n\n```js\n\n\nexport const render = (component, target) =\u003e {\n  \n};\n\nconst ReactDOM = {\n  render,\n  \n};\n\nexport default ReactDOM;\n```\n\nIf you want to play around with the module syntax, check out the folder `code/webpack/es6-modules`.\n\nFor more reading on ES6 modules, see this article from Mozilla: \"[ES6 in Depth: Modules](https://hacks.mozilla.org/2015/08/es6-in-depth-modules/)\".\n\n### `Object.assign()`\n\nWe use `Object.assign()` often throughout the book. We use it in areas where we want to create a modified version of an existing object.\n\n`Object.assign()` accepts any number of objects as arguments. When the function receives two arguments, it _copies_ the properties of the second object onto the first, like so:\n\n  \n\n```js\nonst coffee = { };\nconst noCream = { cream: false };\nconst noMilk = { milk: false };\nObject.assign(coffee, noCream);\n\n```\n\nIt is idiomatic to pass in three arguments to `Object.assign()`. The first argument is a new JavaScript object, the one that `Object.assign()` will ultimately return. The second is the object whose properties we'd like to build off of. The last is the changes we'd like to apply:\n\n  \n\n```js\nconst coffeeWithMilk = Object.assign({}, coffee, { milk: true });\n\n\n```\n\n`Object.assign()` is a handy method for working with \"immutable\" JavaScript objects.\n\n### Template literals\n\nIn ES5 JavaScript, you'd interpolate variables into strings like this:\n\n  \n\n```js\nvar greeting = 'Hello, ' + user + '! It is ' + degF + ' degrees outside.';\n```\n\nWith ES6 template literals, we can create the same string like this:\n\n  \n\n```js\nconst greeting = `Hello, ${user}! It is ${degF} degrees outside.`;\n```\n\n### The spread operator (`...`)\n\nIn arrays, the ellipsis `...` operator will _expand_ the array that follows into the parent array. The spread operator enables us to succinctly construct new arrays as a composite of existing arrays.\n\nHere is an example:\n\n  \n\n```js\nconst a = [ 1, 2, 3 ];\nconst b = [ 4, 5, 6 ];\nconst c = [ ...a, ...b, 7, 8, 9 ];\n\nconsole.log(c);  \n```\n\nNotice how this is different than if we wrote:\n\n  \n\n```js\nconst d = [ a, b, 7, 8, 9 ];\nconsole.log(d); \n```\n\n### Enhanced object literals\n\nIn ES5, all objects were required to have explicit key and value declarations:\n\n  \n\n```js\nconst explicit = {\n  getState: getState,\n  dispatch: dispatch,\n};\n```\n\nIn ES6, you can use this terser syntax whenever the property name and variable name are the same:\n\n  \n\n```js\nconst implicit = {\n  getState,\n  dispatch,\n};\n```\n\nLots of open source libraries use this syntax, so it's good to be familiar with it. But whether you use it in your own code is a matter of stylistic preference.\n\n### Default arguments\n\nWith ES6, you can specify a default value for an argument in the case that it is `undefined` when the function is called.\n\nThis:\n\n  \n\n```js\nunction divide(a, b) {\n  \n  const divisor = typeof b === 'undefined' ? 1 : b;\n\n  return a / divisor;\n}\n```\n\nCan be written as this:\n\n  \n\n```js\nfunction divide(a, b = 1) {\n  return a / b;\n}\n```\n\nIn both cases, using the function looks like this:\n\n  \n\n```js\ndivide(14, 2);\n\ndivide(14, undefined);\n\ndivide(14);\n\n```\n\nWhenever the argument `b` in the example above is `undefined`, the default argument is used. Note that `null` will not use the default argument:\n\n  \n\n```js\ndivide(14, null); \n\n```\n\n### Destructuring assignments\n\n#### For arrays\n\nIn ES5, extracting and assigning multiple elements from an array looked like this:\n\n  \n\n```js\nar fruits = [ 'apples', 'bananas', 'oranges' ];\nvar fruit1 = fruits[0];\nvar fruit2 = fruits[1];\n```\n\nIn ES6, we can use the destructuring syntax to accomplish the same task like this:\n\n  \n\n```js\nconst [ veg1, veg2 ] = [ 'asparagus', 'broccoli', 'onion' ];\nconsole.log(veg1); \nconsole.log(veg2); \n```\n\nThe variables in the array on the left are \"matched\" and assigned to the corresponding elements in the array on the right. Note that `'onion'` is ignored and has no variable bound to it.\n\n#### For objects\n\nWe can do something similar for extracting object properties into variables:\n\n  \n\n```js\nconst smoothie = {\n  fats: [ 'avocado', 'peanut butter', 'greek yogurt' ],\n  liquids: [ 'almond milk' ],\n  greens: [ 'spinach' ],\n  fruits: [ 'blueberry', 'banana' ],\n};\n\nconst { liquids, fruits } = smoothie;\n\nconsole.log(liquids); \nconsole.log(fruits); \n```\n\n#### Parameter context matching\n\nWe can use these same principles to bind arguments inside a function to properties of an object supplied as an argument:\n\n  \n\n```js\nconst containsSpinach = ({ greens }) =\u003e {\n  if (greens.find(g =\u003e g === 'spinach')) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\ncontainsSpinach(smoothie); \n```\n\nWe do this often with functional React components:\n\n  \n\n```js\nconst IngredientList = ({ ingredients, onClick }) =\u003e (\n  \u003cul className='IngredientList'\u003e\n    {\n      ingredients.map(i =\u003e (\n        \u003cli\n          key={i.id}\n          onClick={() =\u003e onClick(i.id)}\n          className='item'\n        \u003e\n          {i.name}\n        \u003c/li\u003e\n      ))\n    }\n  \u003c/ul\u003e\n)\n```\n\nHere, we use destructuring to extract the props into variables (`ingredients` and `onClick`) that we then use inside the component's function body.\n",
            "contentLength": 12076,
            "isShared": true,
            "snippetFileOrder": 0,
            "createdAt": "2021-07-29T09:29:24Z",
            "updatedAt": "2021-07-29T09:29:24Z"
          }
        ]
      },
      {
        "id": 1060408,
        "guid": "430e6f0afa49bbf2689a",
        "title": "my-websites.html",
        "description": "",
        "isPrivate": false,
        "createdAt": "2021-07-28T19:52:10Z",
        "updatedAt": "2021-07-28T19:52:10Z",
        "gistId": "f95dd0812fe76adfd58dfa2cb177307b",
        "gistboxId": null,
        "syncToGist": true,
        "gistUpdatedAt": null,
        "pagePermission": null,
        "starredBy": [],
        "createdBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "lastUpdatedBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "files": [
          {
            "id": 1565088,
            "guid": "17e781824ea046964494",
            "filename": "my-websites.html",
            "filetype": "html",
            "content": "\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n\n\u003chead\u003e\n  \u003cmeta charset=\"UTF-8\"\u003e\n  \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e\n  \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n  \u003ctitle\u003eMy Links\u003c/title\u003e\n  \u003clink rel=\"stylesheet\" href=\"./style.css\"\u003e\n  \u003clink href='https://fonts.googleapis.com/css?family=Lato:300,400,700' rel='stylesheet' type='text/css'\u003e\n  \u003cstyle\u003e\n    body {\n      /* display: block; */\n      margin: 4px;\n      font-size: x-large !important;\n      zoom: 1.7;\n    }\n\n    .ignore-css {\n      all: unset;\n    }\n\n    a {\n      text-shadow: -1px -1px 0 rgb(255, 255, 255), 1px -1px 0 rgb(255, 255, 255), -1px 1px 0 #000, 1px 1px 0 #000;\n      text-transform: capitalize;\n      font-size: medium;\n      color: #3e7efde3;\n\n\n    }\n\n    a:hover {\n      background-color: #f5f5f5;\n    }\n\n    a:active {\n      box-shadow: none;\n      top: 5px;\n    }\n\n\n\n    ul {\n\n\n      box-align: center;\n      margin: auto;\n      align-self: center;\n      list-style-type: none;\n    }\n\n    textarea {\n      -webkit-appearance: searchfield;\n    }\n\n    li {\n      background: rgba(250, 211, 211, 0.173);\n      resize: both;\n      height: 80px;\n      border: 1px solid goldenrod !important;\n      font-size: 16px;\n      letter-spacing: 0px;\n      font-weight: 900;\n      overflow: auto;\n      cursor: pointer;\n      justify-content: center;\n      height: 48px;\n      text-align: center;\n      white-space: normal;\n      border-radius: 10px;\n      min-width: 35em;\n      width: 60%;\n      box-shadow: 0 0 6px;\n    }\n\n    body {\n      background: url(https://i.gifer.com/76YS.gif);\n      zoom: 0.79;\n\n      font-size: 30px;\n      color: #aaa\n    }\n\n    .btn {\n\n      text-decoration: none;\n      background-color: transparent;\n      color: #ffffff;\n      border-radius: 10px;\n      border-top: 1px solid #CCCCCC;\n      border-right: 1px solid #333333;\n      border-bottom: 1px solid #333333;\n      border-left: 1px solid #160082;\n    }\n\n    li {\n      margin-top: 10px;\n      border: 1px solid grey;\n    }\n\n    li:first-child {\n      margin-top: 0;\n    }\n\n    h1,\n    h2 {\n      font-weight: 900;\n      margin: 0.4em 0;\n    }\n\n    h1 {\n      font-size: 3.5em;\n    }\n\n    h2 {\n      color: #888;\n      font-size: 2em;\n    }\n\n    .stars1 {\n      overflow: auto;\n    }\n  \u003c/style\u003e\n  \u003c!-- Optional theme --\u003e\n  \u003c!-- \u003clink rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css\"\n    integrity=\"sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp\" crossorigin=\"anonymous\"\u003e\n  \u003c!-- Latest compiled and minified JavaScript --\u003e\n  \u003c!--\u003cscript src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"\n    integrity=\"sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa\" crossorigin=\"anonymous\"\u003e\n    \u003c/script\u003e --\u003e\n  \u003cscript\u003e\n    function mySearchFunction() {\n      // Declare variables\n      var input, filter, ul, li, item, i, txtValue;\n      // User Input\n      input = document.getElementById( \"myInput\" );\n      // Filter, makes search not case sensitive\n      filter = input.value.toUpperCase();\n      // Grabs the parent element by id\n      ul = document.getElementById( \"stateList\" );\n      // Individual item on list\n      li = ul.getElementsByTagName( \"li\" );\n      // Treats lists items like an array, where each item can be accessed through      it's index\n      for ( i = 0; i \u003c li.length; i++ ) {\n        item = li[ i ];\n        // Iterate over each list item to see if the value of the input, ignoring         case, matches the inner text or inner html of the item.\n        txtValue = item.textContent || item.innerText;\n        if ( txtValue.toUpperCase().indexOf( filter ) \u003e -1 ) {\n          // Displays list items that are a match, and nothing if no match\n          li[ i ].style.display = \"\";\n        } else {\n          li[ i ].style.display = \"none\";\n        }\n      }\n    }\n  \u003c/script\u003e\n\u003c/head\u003e\n\n\u003cbody for=\"html-export\"\u003e\n  \u003cbr\u003e\n  \u003ccenter\u003e\n    \u003cbr\u003e\n    \u003cinput type=\"text\" id=\"myInput\" onkeyup=\"mySearchFunction()\" placeholder=\"Search\"\u003e\n    \u003cbr\u003e\n    \u003cbr\u003e\n    \u003cbr\u003e\n  \u003c/center\u003e\n  \u003cbr\u003e\n  \u003cbr\u003e\n  \u003ccenter \u003cul id=\"stateList\"\u003e\n    \u003cli\u003e\u003ca href=\"https://bgoonz-blog.netlify.app\"\u003eMain Blog\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://bg-portfolio.netlify.app\"\u003ePortfolio\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://bgoonz-blog-v3-0.netlify.app\"\u003ehttps://bgoonz-blog-v3-0.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://panoramic-eggplant-452e4.netlify.app\"\u003ehttps://panoramic-eggplant-452e4.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://potluck-landing.netlify.app\"\u003ehttps://potluck-landing.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://blog-w-comments.netlify.app\"\u003ehttps://blog-w-comments.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://bgoonz-games.netlify.app\"\u003ehttps://bgoonz-games.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://resourcerepo2.netlify.app\"\u003ehttps://resourcerepo2.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://links4242.netlify.app\"\u003ehttps://links4242.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://py-prac-42.netlify.app\"\u003ehttps://py-prac-42.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://friendly-panda-b61ab.netlify.app\"\u003esidebar embeds\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://curious-zebra-a1329.netlify.app\"\u003eProjectNavigationPage\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://mihirbegmusiclab.netlify.app\"\u003eWebAudioDaw\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://wizardly-hermann-c9ade8.netlify.app\"\u003eAblogtemplatewithNext.jsandNetlify.\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://learning-redux42.netlify.app\"\u003ehttps://learning-redux42.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://code-playground.netlify.app\"\u003eEmbedPlayground\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://markdown-templates-42.netlify.app\"\u003ehttps://markdown-templates-42.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://silly-lichterman-b22b5f.netlify.app\"\u003ehttps://silly-lichterman-b22b5f.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://inspiring-jennings-d14689.netlify.app\"\u003ehttps://inspiring-jennings-d14689.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://determined-dijkstra-ee7390.netlify.app\"\u003ehttps://determined-dijkstra-ee7390.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://fourm-builder-gui.netlify.app\"\u003ehttps://fourm-builder-gui.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://iframeshowcase.netlify.app\"\u003ehttps://iframeshowcase.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://bgoonzmedium.netlify.app\"\u003ehttps://bgoonzmedium.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://ds-algo-official.netlify.app\"\u003ehttps://ds-algo-official.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://bgoonzgist.netlify.app\"\u003ehttps://bgoonzgist.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://blog-v42-31eba.netlify.app\"\u003ehttps://blog-v42-31eba.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://friendly-amaranth-51833.netlify.app\"\u003eNorwex\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://goofy-curran-95aa66.netlify.app\"\u003ehttps://goofy-curran-95aa66.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://splendid-onion-b0ec3.netlify.app\"\u003ehttps://splendid-onion-b0ec3.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://bgoonz-cv.netlify.app\"\u003ehttps://bgoonz-cv.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://exploring-next-sanity.netlify.app\"\u003ehttps://exploring-next-sanity.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://adoring-carson-fac9fb.netlify.app\"\u003ehttps://adoring-carson-fac9fb.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://app.netlify.com/start.netlify.app\"\u003ehttps://app.netlify.com/start.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://relaxed-bhaskara-dc85ec.netlify.app\"\u003ehttps://relaxed-bhaskara-dc85ec.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://recursion-prompts.netlify.app\"\u003ehttps://recursion-prompts.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://quizzical-mcnulty-fa09f2.netlify.app\"\u003ehttps://quizzical-mcnulty-fa09f2.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://festive-borg-e4d856.netlify.app\"\u003ehttps://festive-borg-e4d856.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://nervous-swartz-0ab2cc.netlify.app\"\u003ehttps://nervous-swartz-0ab2cc.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://angry-fermat-dcf5dd.netlify.app\"\u003ehttps://angry-fermat-dcf5dd.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://eloquent-kepler-19141d.netlify.app\"\u003ehttps://eloquent-kepler-19141d.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://modest-booth-4e17df.netlify.app\"\u003ehttps://modest-booth-4e17df.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://priceless-shaw-86ccb2.netlify.app\"\u003ehttps://priceless-shaw-86ccb2.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://pensive-meitner-1ea8c4.netlify.app\"\u003ehttps://pensive-meitner-1ea8c4.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca\n        href=\"https://gitlab.com/bryan.guner.dev/DS-ALGO-OFFICIAL.netlify.app\"\u003ehttps://gitlab.com/bryan.guner.dev/DS-ALGO-OFFICIAL.netlify.app\u003c/a\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://dreamy-swartz-bc7e89.netlify.app\"\u003ehttps://dreamy-swartz-bc7e89.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca\n        href=\"https://gitlab.com/bryan.guner.dev/%5Bweb-dev-notes-resource-site.netlify.app\"\u003ehttps://gitlab.com/bryan.guner.dev/web-dev-notes-resource-site.netlify.app\u003c/a\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://condescending-lewin-c96727.netlify.app\"\u003ehttps://condescending-lewin-c96727.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://vigorous-panini-b682d2.netlify.app\"\u003ehttps://vigorous-panini-b682d2.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://jovial-agnesi-8ec8b1.netlify.app\"\u003ehttps://jovial-agnesi-8ec8b1.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://www.netlify.com/docs/.netlify.app\"\u003ehttps://www.netlify.com/docs/.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://www.netlify.com/pricing/.netlify.app\"\u003ehttps://www.netlify.com/pricing/.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://www.netlify.com/support.netlify.app\"\u003ehttps://www.netlify.com/support.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://www.netlify.com/news/.netlify.app\"\u003ehttps://www.netlify.com/news/.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://www.netlify.com/tos/.netlify.app\"\u003ehttps://www.netlify.com/tos/.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://app.netlify.com/.netlify.app\"\u003ehttps://app.netlify.com/.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca\n        href=\"https://app.netlify.com/teams/bgoonz/billing/pricing.netlify.app\"\u003ehttps://app.netlify.com/teams/bgoonz/billing/pricing.netlify.app\u003c/a\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca\n        href=\"https://app.netlify.com/teams/bgoonz/overview.netlify.app\"\u003ehttps://app.netlify.com/teams/bgoonz/overview.netlify.app\u003c/a\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca\n        href=\"https://app.netlify.com/teams/bgoonz/sites.netlify.app\"\u003ehttps://app.netlify.com/teams/bgoonz/sites.netlify.app\u003c/a\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca\n        href=\"https://app.netlify.com/teams/bgoonz/builds/.netlify.app\"\u003ehttps://app.netlify.com/teams/bgoonz/builds/.netlify.app\u003c/a\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca\n        href=\"https://app.netlify.com/teams/bgoonz/plugins.netlify.app\"\u003ehttps://app.netlify.com/teams/bgoonz/plugins.netlify.app\u003c/a\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca\n        href=\"https://app.netlify.com/teams/bgoonz/dns.netlify.app\"\u003ehttps://app.netlify.com/teams/bgoonz/dns.netlify.app\u003c/a\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca\n        href=\"https://app.netlify.com/teams/bgoonz/members.netlify.app\"\u003ehttps://app.netlify.com/teams/bgoonz/members.netlify.app\u003c/a\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca\n        href=\"https://app.netlify.com/teams/bgoonz/log.netlify.app\"\u003ehttps://app.netlify.com/teams/bgoonz/log.netlify.app\u003c/a\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca\n        href=\"https://app.netlify.com/teams/bgoonz/billing.netlify.app\"\u003ehttps://app.netlify.com/teams/bgoonz/billing.netlify.app\u003c/a\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca\n        href=\"https://app.netlify.com/teams/bgoonz/settings.netlify.app\"\u003ehttps://app.netlify.com/teams/bgoonz/settings.netlify.app\u003c/a\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://app.netlify.com/start.netlify.app\"\u003ehttps://app.netlify.com/start.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://nervous-spence-2c9965.netlify.app\"\u003ehttps://nervous-spence-2c9965.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://admiring-montalcini-965c0b.netlify.app\"\u003ehttps://admiring-montalcini-965c0b.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://aux-links.netlify.app\"\u003ehttps://aux-links.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://meditate42app.netlify.app\"\u003ehttps://meditate42app.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://gallant-murdock-22bede.netlify.app\"\u003ehttps://gallant-murdock-22bede.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://bgoonzconnekt4.netlify.app\"\u003ehttps://bgoonzconnekt4.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://todo42.netlify.app\"\u003ehttps://todo42.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://lambdadom1.netlify.app\"\u003ehttps://lambdadom1.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://knowledge-bas42.netlify.app\"\u003ehttps://knowledge-bas42.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://ternary42.netlify.app\"\u003ehttps://ternary42.netlify.app\u003c/a\u003e\u003c/li\u003e\n\n    \u003cli\u003e\u003ca href=\"https://curious-rabbit-f33af.netlify.app\"\u003eSidebar Landing Fitness\u003c/a\u003e\u003c/li\u003e\n\n    \u003cli\u003e\u003ca href=\"https://hardcore-hamilton-c5b45e.netlify.app\"\u003ehttps://hardcore-hamilton-c5b45e.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://bgoonzblog20-redo.netlify.app\"\u003ehttps://bgoonzblog20-redo.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://smart-artichoke-3546f.netlify.app\"\u003ehttps://smart-artichoke-3546f.netlify.app\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://bgoonzbookmarks.netlify.app\"\u003ehttps://bgoonzbookmarks.netlify.app\u003c/a\u003e\u003c/li\u003e\n\n\n\n    \u003c/ul\u003e\n  \u003c/center\u003e\n\n\n\n\n\n\n\n\n\n\n\u003c/body\u003e\n\n\u003c/html\u003e\n",
            "contentLength": 13118,
            "isShared": true,
            "snippetFileOrder": 0,
            "createdAt": "2021-07-29T09:02:53Z",
            "updatedAt": "2021-07-29T09:02:53Z"
          }
        ]
      },
      {
        "id": 1060409,
        "guid": "b0207eb8e71b113e413e",
        "title": "web-keywords.md",
        "description": "web-keywords.md",
        "isPrivate": true,
        "createdAt": "2021-07-28T01:05:34Z",
        "updatedAt": "2021-07-28T01:05:35Z",
        "gistId": "7cb4cd5871fee4522e19b8a0d0b0d9ad",
        "gistboxId": null,
        "syncToGist": true,
        "gistUpdatedAt": null,
        "pagePermission": null,
        "starredBy": [],
        "createdBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "lastUpdatedBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "files": [
          {
            "id": 1565089,
            "guid": "25ad5d22494c3680190a",
            "filename": "gistfile1.txt",
            "filetype": "text",
            "content": "__builtin__ __future__ _base _internal abc ABitOfDI Abstractions account admin ADOBLL ADODAL aiogram aiohttp amount Analyzers AngularCli ansible_runner API apps argparse asgi AspNet AspNetCore ast Async async_timeout asyncio asyncpg atexit attributes auth Authentication Authorization Autofac AutoMapper azure Azure backend_bases backoff base Base base64 BetterExtensions Binary binascii bisect block blockchain bootstrap_scoped Bot boto3 bs4 Build build_py Builder Builders builtins BulkExtensions Business Caching Calculation callbacks CampoTetris cassandra Cassandra CassandraCSharpDriver catkin_pkg Claims classyjson clean click client cloud cluster CodeAnalysis codecs CodeGeneration Collections collections collector colorama colorlog colorsys command commands Common Compact CompilerServices ComponentModel Components Compression concurrent conf config configparser ConfigParser Configs Configuration connector Console contextlib Contexts Contracts contrib cooldowns copy Core CORE core corpus Cors coverlet cProfile crcmod Cryptography CSharp CSharpFunctionalExtensions csv ctypes cv2 dal data Data DataAnnotations DataSetExtensions datetime dbl declarative decorators decouple deletion Dependencies DependencyInjection DependencyModel Deployment Design develop DevServer dex Diagnostics DirectiveMerger discord discovery dispatcher Distributed distutils django django_heroku dns Domain dotenv DotNet DotStatistics Drawing Drawing2D DTO DTOs edit EFBLL EFCore EFDAL emoji Enrichers EntityFrameworkCore enum Enums Environment errno error etsyterms events Events Exceptions exceptions Expressions ext Extensions feature_extraction fields File FileExtensions files FileSystem Filters filters fiware_ros_msgs flasgger flask flask_cors flask_wtf flow FluentAssertions Formatters Formatting Forms forms Framework freezegun frontmatter fsm_storage functional Functions functions functools futures Games GameStore Generic generic getpass gevent glob Globalization gluon gluoncv Gnuplot google google_auth_oauthlib googleapiclient hashcode hashlib HealthChecks heapq Helpers hmac HostedServices Hosting html Http http HttpOverrides HttpsPolicy IdentityModel inet Infrastructure InputFiles inspect install install_lib Interfaces InteropServices ioloop itertools joblib Json json jsonpickle Jwt JwtBearer KDD keras layers LecturebotDAL linear_model LinearAlgebra Linq locale logging Logging lxml lyricsgenius management manager Mapping markdown math math_series matplotlib Matrixes MediatR memory Metadata Microsoft Middleware Migrations Mime MiniProfiler mock models Models Modules mopidy mopidy_mp3quran mqtt msg multiprocessing Mvc mxnet mysql names NET Net net5 netcoreapp2 netcoreapp3 netstandard2 Newtonsoft NewtonsoftJson Ninject nltk Npgsql numbers Numeric numpy NUnit nunit NUnit3TestAdapter oauth2 ObjectModel observers OpenApi operator optimize Options OrderManagerBLL OrderManagerDAL orm paho pandas parameterized parse parser parsers Parsers path pathlib pickle PIL pip piston pistonbase pistoncli pkg_resources platform plyr pool pose post PostgreSQL pprint preprocessing prettytable Primitives profile project Providers Proxies psutil pygame pygments pykka pymongo pyplot PyQt5 pytest python_setup pytz QtCore QtGui QtWidgets quandl query Queue queue random Razor RazorPages RDPresentationLayer RDTask2 RDTask5 readvis redis Refit Reflection Regression RegularExpressions ReplyMarkups Repositories Repository repository req request requests resource Resources ResponseCompression responses rest_framework rest_framework_simplejwt rnn rospy rosunit routers Routing runner Runtime scapy sched scipy scrapy Sdk secrets Security selector sendrecv sensor_msgs Serialization Serilog Services Settings setuptools shell shlex shortcuts shutil Sinks six sklearn socket spacy SpaServices spawn speakerapp special sphinx_rtd_theme spiders sql sqlalchemy SqlClient Sqlite sqlite3 SqlServer SqlTypes ssl StackExchangeRedis state static staticfiles std_msgs steem stem Storage storage string StringIO struct style subprocess SwaggerGen SwaggerUI Swashbuckle sys system System TableGateways tabulate TargetFrameworkVersion Tasks Telegram telepot tempfile tensorflow tepclass termcolor test Test testinfra testing TestTools Text text textblob textwrap Threading threading ticker time timezone token tokenizers Tokens Tools torch tornado traceback transactions transformers transforms translation transport Trees tweepy Types types typing unittest UnitTesting urllib urllib2 urllib3 urls utils uuid validators ValueConversion VehicleCatalog views VisualStudio visualstudio warnings watchdog web Web WebAssembly WebJobs websocket werkzeug Windows witness Worker wsgi wtforms X509Certificates Xml XUnit Xunit xunit zipfile",
            "contentLength": 4715,
            "isShared": false,
            "snippetFileOrder": 0,
            "createdAt": "2021-07-29T09:02:53Z",
            "updatedAt": "2021-07-29T09:02:53Z"
          }
        ]
      },
      {
        "id": 1060410,
        "guid": "826ebaf932a2ce1f65f4",
        "title": "express.md",
        "description": "",
        "isPrivate": true,
        "createdAt": "2021-07-27T21:06:03Z",
        "updatedAt": "2021-07-27T21:06:04Z",
        "gistId": "6e6c0aa5a58565cde495ca1d8cf3ebe6",
        "gistboxId": null,
        "syncToGist": true,
        "gistUpdatedAt": null,
        "pagePermission": null,
        "starredBy": [],
        "createdBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "lastUpdatedBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "files": [
          {
            "id": 1565090,
            "guid": "2850c6c7ca6eb85c5c4d",
            "filename": "express.md",
            "filetype": "markdown",
            "content": "",
            "contentLength": 50356,
            "isShared": false,
            "snippetFileOrder": 0,
            "createdAt": "2021-07-29T09:02:53Z",
            "updatedAt": "2021-07-29T09:02:53Z"
          }
        ]
      },
      {
        "id": 1060411,
        "guid": "951351467ed757cfe0e8",
        "title": "google-styleguide.md",
        "description": "",
        "isPrivate": false,
        "createdAt": "2021-07-27T21:02:59Z",
        "updatedAt": "2021-07-27T21:02:59Z",
        "gistId": "4ed6d97e56710bbc08ac4a5e71da094a",
        "gistboxId": null,
        "syncToGist": true,
        "gistUpdatedAt": null,
        "pagePermission": null,
        "starredBy": [],
        "createdBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "lastUpdatedBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "files": [
          {
            "id": 1565091,
            "guid": "648b2c4fb98593fc691e",
            "filename": "google-styleguide.md",
            "filetype": "markdown",
            "content": "Google and Airbnb have two of the most popular style guides out there. I’d definitely recommend you check out both of them if you spend much time writing JS.\n\nThe following are thirteen of what I think are the most interesting and relevant rules from Google’s JS Style Guide.\n\nThey deal with everything from hotly contested issues (tabs versus spaces, and the controversial issue of how semicolons should be used), to a few more obscure specifications which surprised me. They will definitely change the way I write my JS going forward.\n\nFor each rule, I’ll give a summary of the specification, followed by a supporting quote from the style guide that describes the rule in detail. Where applicable, I’ll also provide an example of the style in practice, and contrast it with code that does not follow the rule.\n\nUse spaces, not tabs\nAside from the line terminator sequence, the ASCII horizontal space character (0x20) is the only whitespace character that appears anywhere in a source file. This implies that… Tab characters are not used for indentation.\nThe guide later specifies you should use two spaces (not four) for indentation.\n\n// badfunction foo() {∙∙∙∙let name;}// badfunction bar() {∙let name;}// goodfunction baz() {∙∙let name;}\nSemicolons ARE required\nEvery statement must be terminated with a semicolon. Relying on automatic semicolon insertion is forbidden.\nAlthough I can’t imagine why anyone is opposed to this idea, the consistent use of semicolons in JS is becoming the new ‘spaces versus tabs’ debate. Google’s coming out firmly here in the defence of the semicolon.\n\n// badlet luke = {}let leia = {}[luke, leia].forEach(jedi =\u003e jedi.father = 'vader')\n// goodlet luke = {};let leia = {};[luke, leia].forEach((jedi) =\u003e {  jedi.father = 'vader';});\nDon’t use ES6 modules (yet)\nDo not use ES6 modules yet (i.e. the export and import keywords), as their semantics are not yet finalized. Note that this policy will be revisited once the semantics are fully-standard.\n// Don't do this kind of thing yet:\n//------ lib.js ------export function square(x) {    return x * x;}export function diag(x, y) {    return sqrt(square(x) + square(y));}//------ main.js ------import { square, diag } from 'lib';\nHorizontal alignment is discouraged (but not forbidden)\nThis practice is permitted, but it is generally discouraged by Google Style. It is not even required to maintain horizontal alignment in places where it was already used.\nHorizontal alignment is the practice of adding a variable number of additional spaces in your code, to make certain tokens appear directly below certain other tokens on previous lines.\n\n// bad{  tiny:   42,    longer: 435, };\n// good{  tiny: 42,   longer: 435,};\nDon’t use var anymore\nDeclare all local variables with either const or let. Use const by default, unless a variable needs to be reassigned. The var keyword must not be used.\nI still see people using var in code samples on StackOverflow and elsewhere. I can’t tell if there are people out there who will make a case for it, or if it’s just a case of old habits dying hard.\n\n// badvar example = 42;\n// goodlet example = 42;\nArrow functions are preferred\nArrow functions provide a concise syntax and fix a number of difficulties with this. Prefer arrow functions over the function keyword, particularly for nested functions\nI’ll be honest, I just thought that arrow functions were great because they were more concise and nicer to look at. Turns out they also serve a pretty important purpose.\n\n// bad[1, 2, 3].map(function (x) {  const y = x + 1;  return x * y;});// good[1, 2, 3].map((x) =\u003e {  const y = x + 1;  return x * y;});\nUse template strings instead of concatenation\nUse template strings (delimited with `) over complex string concatenation, particularly if multiple string literals are involved. Template strings may span multiple lines.\n// badfunction sayHi(name) {  return 'How are you, ' + name + '?';}// badfunction sayHi(name) {  return ['How are you, ', name, '?'].join();}// badfunction sayHi(name) {  return `How are you, ${ name }?`;}// goodfunction sayHi(name) {  return `How are you, ${name}?`;}\nDon’t use line continuations for long strings\nDo not use line continuations (that is, ending a line inside a string literal with a backslash) in either ordinary or template string literals. Even though ES5 allows this, it can lead to tricky errors if any trailing whitespace comes after the slash, and is less obvious to readers.\nInterestingly enough, this is a rule that Google and Airbnb disagree on (here’s Airbnb’s spec).\n\nWhile Google recommends concatenating longer strings (as shown below) Airbnb’s style guide recommends essentially doing nothing, and allowing long strings to go on as long as they need to.\n\n// bad (sorry, this doesn't show up well on mobile)const longString = 'This is a very long string that \\    far exceeds the 80 column limit. It unfortunately \\    contains long stretches of spaces due to how the \\    continued lines are indented.';\n// goodconst longString = 'This is a very long string that ' +     'far exceeds the 80 column limit. It does not contain ' +     'long stretches of spaces since the concatenated ' +    'strings are cleaner.';\n“for… of” is the preferred type of ‘for loop’\nWith ES6, the language now has three different kinds of for loops. All may be used, though for-of loops should be preferred when possible.\nThis is a strange one if you ask me, but I thought I’d include it because it is pretty interesting that Google declares a preferred type of for loop.\n\nI was always under the impression that for... in loops were better for objects, while for... of were better suited to arrays. A ‘right tool for the right job’ type situation.\n\nWhile Google’s specification here doesn’t necessarily contradict that idea, it is still interesting to know they have a preference for this loop in particular.\n\nDon’t use eval()\nDo not use eval or the Function(...string) constructor (except for code loaders). These features are potentially dangerous and simply do not work in CSP environments.\nThe MDN page for eval() even has a section called “Don’t use eval!”\n\n// badlet obj = { a: 20, b: 30 };let propName = getPropName();  // returns \"a\" or \"b\"eval( 'var result = obj.' + propName );\n// goodlet obj = { a: 20, b: 30 };let propName = getPropName();  // returns \"a\" or \"b\"let result = obj[ propName ];  //  obj[ \"a\" ] is the same as obj.a\nConstants should be named in ALL_UPPERCASE separated by underscores\nConstant names use CONSTANT_CASE: all uppercase letters, with words separated by underscores.\nIf you’re absolutely sure that a variable shouldn’t change, you can indicate this by capitalizing the name of the constant. This makes the constant’s immutability obvious as it gets used throughout your code.\n\nA notable exception to this rule is if the constant is function-scoped. In this case it should be written in camelCase.\n\n// badconst number = 5;\n// goodconst NUMBER = 5;\nOne variable per declaration\nEvery local variable declaration declares only one variable: declarations such as let a = 1, b = 2; are not used.\n// badlet a = 1, b = 2, c = 3;\n// goodlet a = 1;let b = 2;let c = 3;\nUse single quotes, not double quotes\nOrdinary string literals are delimited with single quotes ('), rather than double quotes (\").\nTip: if a string contains a single quote character, consider using a template string to avoid having to escape the quote.\n// badlet directive = \"No identification of self or mission.\"\n// badlet saying = 'Say it ain\\u0027t so.';\n// goodlet directive = 'No identification of self or mission.';\n// goodlet saying = `Say it ain't so`;",
            "contentLength": 7612,
            "isShared": true,
            "snippetFileOrder": 0,
            "createdAt": "2021-07-29T09:02:53Z",
            "updatedAt": "2021-07-29T09:02:53Z"
          }
        ]
      },
      {
        "id": 1060412,
        "guid": "d979926fea96332be137",
        "title": "Node.js",
        "description": "Node.js",
        "isPrivate": false,
        "createdAt": "2021-07-27T21:01:18Z",
        "updatedAt": "2021-07-27T21:01:18Z",
        "gistId": "107039051c32d62a4001481eb29edf87",
        "gistboxId": null,
        "syncToGist": true,
        "gistUpdatedAt": null,
        "pagePermission": null,
        "starredBy": [],
        "createdBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "lastUpdatedBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "files": [
          {
            "id": 1565092,
            "guid": "af1a28195781e6ac5a58",
            "filename": "Node.md",
            "filetype": "markdown",
            "content": "Node.js is a JavaScript runtime environment. Sounds great, but what does that mean? How does that work?\n\nThe Node.js run-time environment includes everything you need to execute a program written in JavaScript.\n\n\nIf you know Java, here’s a little analogy.\nNode.js came into existence when the original developers of JavaScript extended it from something you could only run in the browser to something you could run on your machine as a standalone application.\n\nNow you can do much more with JavaScript than just making websites interactive.\n\nJavaScript now has the capability to do things that other scripting languages like Python can do.\n\nBoth your browser JavaScript and Node.js run on the V8 JavaScript runtime engine. This engine takes your JavaScript code and converts it into a faster machine code. Machine code is low-level code which the computer can run without needing to first interpret it.\n\nWhy Node.js?\nHere’s a formal definition as given on the official Node.js website:\n\nNode.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine.\n\nNode.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient.\n\nNode.js’ package ecosystem, npm, is the largest ecosystem of open source libraries in the world.\nWe already discussed the first line of this definition: “Node.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine.” Now let’s understand the other two lines so we can find out why Node.js is so popular.\n\nI/O refers to input/output. It can be anything ranging from reading/writing local files to making an HTTP request to an API.\n\nI/O takes time and hence blocks other functions.\n\nConsider a scenario where we request a backend database for the details of user1 and user2 and then print them on the screen/console. The response to this request takes time, but both of the user data requests can be carried out independently and at the same time.\n\n\nBlocking I/O (left) vs Non-Blocking I/O (right)\nBlocking I/O\nIn the blocking method, user2's data request is not initiated until user1's data is printed to the screen.\n\nIf this was a web server, we would have to start a new thread for every new user. But JavaScript is single-threaded (not really, but it has a single-threaded event loop, which we’ll discuss a bit later). So this would make JavaScript not very well suited for multi-threaded tasks.\n\nThat’s where the non-blocking part comes in.\n\nNon-blocking I/O\nOn the other hand, using a non-blocking request, you can initiate a data request for user2 without waiting for the response to the request for user1. You can initiate both requests in parallel.\n\nThis non-blocking I/O eliminates the need for multi-threading since the server can handle multiple requests at the same time.\n\nThe JavaScript event loop\nIf you have 26 minutes, watch this excellent video explanation of the Node Event Loop:\n\nOtherwise, here’s a quick step-by-step explanation of how the JavaScript Event Loop works.\n\n\nImage Credits: Andrew Mead’s course\nPush main() onto the call stack.\nPush console.log() onto the call stack. This then runs right away and gets popped.\nPush setTimeout(2000) onto the stack. setTimeout(2000) is a Node API. When we call it, we register the event-callback pair. The event will wait 2000 milliseconds, then callback is the function.\nAfter registering it in the APIs, setTimeout(2000) gets popped from the call stack.\nNow the second setTimeout(0) gets registered in the same way. We now have two Node APIs waiting to execute.\nAfter waiting for 0 seconds, setTimeout(0) gets moved to the callback queue, and the same thing happens with setTimeout(2000).\nIn the callback queue, the functions wait for the call stack to be empty, because only one statement can execute a time. This is taken care of by the event loop.\nThe last console.log() runs, and the main() gets popped from the call stack.\nThe event loop sees that the call stack is empty and the callback queue is not empty. So it moves the callbacks (in a first-in-first-out order) to the call stack for execution.\nnpm\n\nThese are libraries built by the awesome community which will solve most of your generic problems. npm (Node package manager) has packages you can use in your apps to make your development faster and efficient.\n\nRequire\nRequire does three things:\n\nIt loads modules that come bundled with Node.js like file system and HTTP from the Node.js API .\nIt loads third-party libraries like Express and Mongoose that you install from npm.\nIt lets you require your own files and modularize the project.\nRequire is a function, and it accepts a parameter “path” and returns module.exports.\n\nNode Modules\nA Node module is a reusable block of code whose existence does not accidentally impact other code.\n\nYou can write your own modules and use it in various application. Node.js has a set of built-in modules which you can use without any further installation.\n\nV8 turbo-charges JavaScript by leveraging C++\nV8 is an open source runtime engine written in C++.\n\nJavaScript -\u003e V8(C++) -\u003e Machine Code\n\nV8 implements a script called ECMAScript as specified in ECMA-262. ECMAScript was created by Ecma International to standardize JavaScript.\n\nV8 can run standalone or can be embedded into any C++ application. It has hooks that allow you to write your own C++ code that you can make available to JavaScript.\n\nThis essentially lets you add features to JavaScript by embedding V8 into your C++ code so that your C++ code understands more than what the ECMAScript standard otherwise specifies.\n\nEdit: As brought to my attention by Greg Bulmash, there are many different JavaScript runtime engines apart from V8 by Chrome like SpiderMonkey by Mozilla, Chakra by Microsoft, etc. Details of the same can be found on this page.\n\nEvents\nSomething that has happened in our app that we can respond to. There are two types of events in Node.\n\nSystem Events: C++ core from a library called libuv. (For example, finished reading a file).\nCustom Events: JavaScript core.\nWriting Hello World in Node.js\nWe have to do this, don’t we?\n\nMake a file app.js and add the following to it.\n\nconsole.log(\"Hello World!\");\nOpen your node terminal, change the directory to the folder where the file is saved and run node app.js.",
            "contentLength": 6228,
            "isShared": true,
            "snippetFileOrder": 0,
            "createdAt": "2021-07-29T09:02:53Z",
            "updatedAt": "2021-07-29T09:02:53Z"
          }
        ]
      },
      {
        "id": 1060413,
        "guid": "b30a60656173cb452fbc",
        "title": "js-snippets.md",
        "description": "js-snippets.md",
        "isPrivate": false,
        "createdAt": "2021-07-27T20:28:08Z",
        "updatedAt": "2021-07-27T20:30:23Z",
        "gistId": "cefa15687de0dcc6b3f7675d6f175042",
        "gistboxId": null,
        "syncToGist": true,
        "gistUpdatedAt": null,
        "pagePermission": null,
        "starredBy": [],
        "createdBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "lastUpdatedBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "files": [
          {
            "id": 1565093,
            "guid": "05bb90f086d5713e78c0",
            "filename": "js-snippets.md",
            "filetype": "markdown",
            "content": "1\\. all\n\nThis snippet returns `true` if the predicate function returns `true` for all elements in a collection and `false` otherwise. You can omit the second argument `fn`if you want to use `Boolean`as a default value.\n\n```js\nconst all = (arr, fn = Boolean) =\u003e arr.every(fn);\n\nall([4, 2, 3], x =\u003e x \u003e 1); // true\nall([1, 2, 3]); // true\n\n```\n\n2\\. allEqual\n\nThis snippet checks whether all elements of the array are equal.\n\n```js\nconst allEqual = arr =\u003e arr.every(val =\u003e val === arr[0]);\n\nallEqual([1, 2, 3, 4, 5, 6]); // false\nallEqual([1, 1, 1, 1]); // true\n\n```\n\n3\\. approximatelyEqual\n\nThis snippet checks whether two numbers are approximately equal to each other, with a small difference.\n\n```js\nconst approximatelyEqual = (v1, v2, epsilon = 0.001) =\u003e Math.abs(v1 - v2) \u003c epsilon;\n\napproximatelyEqual(Math.PI / 2.0, 1.5708); // true\n\n```\n\n4\\. arrayToCSV\n\nThis snippet converts the elements that don't have commas or double quotes to strings with comma-separated values.\n\n```js\nconst arrayToCSV = (arr, delimiter = ',') =\u003e\n  arr.map(v =\u003e v.map(x =\u003e `\"${x}\"`).join(delimiter)).join('\\n');\n\narrayToCSV([['a', 'b'], ['c', 'd']]); // '\"a\",\"b\"\\n\"c\",\"d\"'\narrayToCSV([['a', 'b'], ['c', 'd']], ';'); // '\"a\";\"b\"\\n\"c\";\"d\"'\n\n```\n\n5\\. arrayToHtmlList\n\nThis snippet converts the elements of an array into `` tags and appends them to the list of the given ID.\n\n```js\nconst arrayToHtmlList = (arr, listID) =\u003e\n  (el =\u003e (\n    (el = document.querySelector('#' + listID)),\n    (el.innerHTML += arr.map(item =\u003e `\u003cli\u003e${item}\u003c/li\u003e`).join(''))\n  ))();\n\narrayToHtmlList(['item 1', 'item 2'], 'myListID');\n\n```\n\n6\\. attempt\n\nThis snippet executes a function, returning either the result or the caught error object.\n\n```js\nconst attempt = (fn, ...args) =\u003e {\n  try {\n    return fn(...args);\n  } catch (e) {\n    return e instanceof Error ? e : new Error(e);\n  }\n};\nvar elements = attempt(function(selector) {\n  return document.querySelectorAll(selector);\n}, '\u003e_\u003e');\nif (elements instanceof Error) elements = []; // elements = []\n\n```\n\n7\\. average\n\nThis snippet returns the average of two or more numerical values.\n\n```js\nconst average = (...nums) =\u003e nums.reduce((acc, val) =\u003e acc + val, 0) / nums.length;\naverage(...[1, 2, 3]); // 2\naverage(1, 2, 3); // 2\n\n```\n\n8\\. averageBy\n\nThis snippet returns the average of an array after initially doing the mapping of each element to a value using a given function.\n\n```js\nconst averageBy = (arr, fn) =\u003e\n  arr.map(typeof fn === 'function' ? fn : val =\u003e val[fn]).reduce((acc, val) =\u003e acc + val, 0) /\n  arr.length;\n\naverageBy([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], o =\u003e o.n); // 5\naverageBy([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], 'n'); // 5\n\n```\n\n9\\. bifurcate\n\nThis snippet splits values into two groups and then puts a truthy element of `filter`in the first group, and in the second group otherwise.\n\nYou can use `Array.prototype.reduce()`and `Array.prototype.push()`to add elements to groups based on `filter`.\n\n```js\nconst bifurcate = (arr, filter) =\u003e\n  arr.reduce((acc, val, i) =\u003e (acc[filter[i] ? 0 : 1].push(val), acc), [[], []]);\nbifurcate(['beep', 'boop', 'foo', 'bar'], [true, true, false, true]);\n// [ ['beep', 'boop', 'bar'], ['foo'] ]\n\n```\n\n10\\. bifurcateBy\n\nThis snippet splits values into two groups, based on a predicate function. If the predicate function returns a truthy value, the element will be placed in the first group. Otherwise, it will be placed in the second group.\n\nYou can use `Array.prototype.reduce()`and `Array.prototype.push()`to add elements to groups, based on the value returned by `fn`for each element.\n\n```js\nconst bifurcateBy = (arr, fn) =\u003e\n  arr.reduce((acc, val, i) =\u003e (acc[fn(val, i) ? 0 : 1].push(val), acc), [[], []]);\n\nbifurcateBy(['beep', 'boop', 'foo', 'bar'], x =\u003e x[0] === 'b');\n// [ ['beep', 'boop', 'bar'], ['foo'] ]\n\n```\n\n11\\. bottomVisible\n\nThis snippet checks whether the bottom of a page is visible.\n\n```js\nconst bottomVisible = () =\u003e\n  document.documentElement.clientHeight + window.scrollY \u003e=\n  (document.documentElement.scrollHeight || document.documentElement.clientHeight);\n\nbottomVisible(); // true\n\n```\n\n12\\. byteSize\n\nThis snippet returns the length of a string in bytes.\n\n```js\nconst byteSize = str =\u003e new Blob([str]).size;\n\nbyteSize('😀'); // 4\nbyteSize('Hello World'); // 11\n\n```\n\n13\\. capitalize\n\nThis snippet capitalizes the first letter of a string.\n\n```js\nconst capitalize = ([first, ...rest]) =\u003e\n  first.toUpperCase() + rest.join('');\n\ncapitalize('fooBar'); // 'FooBar'\ncapitalize('fooBar', true); // 'FooBar'\n\n```\n\n14\\. capitalizeEveryWord\n\nThis snippet capitalizes the first letter of every word in a given string.\n\n```js\nconst capitalizeEveryWord = str =\u003e str.replace(/\\b[a-z]/g, char =\u003e char.toUpperCase());\n\ncapitalizeEveryWord('hello world!'); // 'Hello World!'\n\n```\n\n15\\. castArray\n\nThis snippet converts a non-array value into array.\n\n```js\nconst castArray = val =\u003e (Array.isArray(val) ? val : [val]);\n\ncastArray('foo'); // ['foo']\ncastArray([1]); // [1]\n\n```\n\n16\\. compact\n\nThis snippet removes false values from an array.\n\n```js\nconst compact = arr =\u003e arr.filter(Boolean);\n\ncompact([0, 1, false, 2, '', 3, 'a', 'e' * 23, NaN, 's', 34]);\n// [ 1, 2, 3, 'a', 's', 34 ]\n\n```\n\n17\\. countOccurrences\n\nThis snippet counts the occurrences of a value in an array.\n\n```js\nconst countOccurrences = (arr, val) =\u003e arr.reduce((a, v) =\u003e (v === val ? a + 1 : a), 0);\ncountOccurrences([1, 1, 2, 1, 2, 3], 1); // 3\n\n```\n\n18\\. Create Directory\n\nThis snippet uses `existsSync()` to check whether a directory exists and then `mkdirSync()` to create it if it doesn't.\n\n```js\nconst fs = require('fs');\nconst createDirIfNotExists = dir =\u003e (!fs.existsSync(dir) ? fs.mkdirSync(dir) : undefined);\ncreateDirIfNotExists('test');\n// creates the directory 'test', if it doesn't exist\n\n```\n\n19\\. currentURL\n\nThis snippet returns the current URL.\n\n```js\nconst currentURL = () =\u003e window.location.href;\n\ncurrentURL(); // 'https://medium.com/@fatosmorina'\n\n```\n\n20\\. dayOfYear\n\nThis snippet gets the day of the year from a `Date`object.\n\n```js\nconst dayOfYear = date =\u003e\n  Math.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\n\ndayOfYear(new Date()); // 272\n\n```\n\n21\\. decapitalize\n\nThis snippet turns the first letter of a string into lowercase.\n\n```js\nconst decapitalize = ([first, ...rest]) =\u003e\n  first.toLowerCase() + rest.join('')\n\ndecapitalize('FooBar'); // 'fooBar'\ndecapitalize('FooBar'); // 'fooBar\n\n```\n\n22\\. deepFlatten\n\nThis snippet flattens an array recursively.\n\n```js\nconst deepFlatten = arr =\u003e [].concat(...arr.map(v =\u003e (Array.isArray(v) ? deepFlatten(v) : v)));\n\ndeepFlatten([1, [2], [[3], 4], 5]); // [1,2,3,4,5]\n\n```\n\n23\\. default\n\nThis snippet assigns default values for all properties in an object that are *undefined*.\n\n```js\nconst defaults = (obj, ...defs) =\u003e Object.assign({}, obj, ...defs.reverse(), obj);\n\ndefaults({ a: 1 }, { b: 2 }, { b: 6 }, { a: 3 }); // { a: 1, b: 2 }\n\n```\n\n24\\. defer\n\nThis snippet delays the execution of a function until the current call stack is cleared.\n\n```js\nconst defer = (fn, ...args) =\u003e setTimeout(fn, 1, ...args);\n\ndefer(console.log, 'a'), console.log('b'); // logs 'b' then 'a'\n\n```\n\n25\\. degreesToRads\n\nThis code snippet can be used to convert a value from degrees to radians.\n\n```\nconst degreesToRads = deg =\u003e (deg * Math.PI) / 180.0;\n\ndegreesToRads(90.0); // ~1.5708\n\n```\n\n26\\. difference\n\nThis snippet finds the difference between two arrays.\n\n```\nconst difference = (a, b) =\u003e {\n  const s = new Set(b);\n  return a.filter(x =\u003e !s.has(x));\n};\n\ndifference([1, 2, 3], [1, 2, 4]); // [3]\n\n```\n\n27\\. differenceBy\n\nThis method returns the difference between two arrays, after applying a given function to each element of both lists.\n\n```\nconst differenceBy = (a, b, fn) =\u003e {\n  const s = new Set(b.map(fn));\n  return a.filter(x =\u003e !s.has(fn(x)));\n};\n\ndifferenceBy([2.1, 1.2], [2.3, 3.4], Math.floor); // [1.2]\ndifferenceBy([{ x: 2 }, { x: 1 }], [{ x: 1 }], v =\u003e v.x); // [ { x: 2 } ]\n\n```\n\n28\\. differenceWith\n\nThis snippet removes the values for which the comparator function returns `false`.\n\n```\nconst differenceWith = (arr, val, comp) =\u003e arr.filter(a =\u003e val.findIndex(b =\u003e comp(a, b)) === -1);\n\ndifferenceWith([1, 1.2, 1.5, 3, 0], [1.9, 3, 0], (a, b) =\u003e Math.round(a) === Math.round(b));\n// [1, 1.2]\n\n```\n\n29\\. digitize\n\nThis snippet gets a number as input and returns an array of its digits.\n\n```\nconst digitize = n =\u003e [...`${n}`].map(i =\u003e parseInt(i));\n\ndigitize(431); // [4, 3, 1]\n\n```\n\n30\\. distance\n\nThis snippet returns the distance between two points by calculating the Euclidean distance.\n\n```\nconst distance = (x0, y0, x1, y1) =\u003e Math.hypot(x1 - x0, y1 - y0);\n\ndistance(1, 1, 2, 3); // 2.23606797749979\n\n```\n\n31\\. Drop Elements\n\nThis snippet returns a new array with `n` elements removed from the left.\n\n```\nconst drop = (arr, n = 1) =\u003e arr.slice(n);\n\ndrop([1, 2, 3]); // [2,3]\ndrop([1, 2, 3], 2); // [3]\ndrop([1, 2, 3], 42); // []\n\n```\n\n32\\. dropRight\n\nThis snippet returns a new array with `n` elements removed from the right.\n\n```\nconst dropRight = (arr, n = 1) =\u003e arr.slice(0, -n);\n\ndropRight([1, 2, 3]); // [1,2]\ndropRight([1, 2, 3], 2); // [1]\ndropRight([1, 2, 3], 42); // []\n\n```\n\n33\\. dropRightWhile\n\nThis snippet removes elements from the right side of an array until the passed function returns `true`.\n\n```\nconst dropRightWhile = (arr, func) =\u003e {\n  while (arr.length \u003e 0 \u0026\u0026 !func(arr[arr.length - 1])) arr = arr.slice(0, -1);\n  return arr;\n};\n\ndropRightWhile([1, 2, 3, 4], n =\u003e n \u003c 3); // [1, 2]\n\n```\n\n34\\. dropWhile\n\nThis snippet removes elements from an array until the passed function returns `true`.\n\n```\nconst dropWhile = (arr, func) =\u003e {\n  while (arr.length \u003e 0 \u0026\u0026 !func(arr[0])) arr = arr.slice(1);\n  return arr;\n};\n\ndropWhile([1, 2, 3, 4], n =\u003e n \u003e= 3); // [3,4]\n\n```\n\n35\\. elementContains\n\nThis snippet checks whether the parent element contains the child.\n\n```\nconst elementContains = (parent, child) =\u003e parent !== child \u0026\u0026 parent.contains(child);\n\nelementContains(document.querySelector('head'), document.querySelector('title')); // true\nelementContains(document.querySelector('body'), document.querySelector('body')); // false\n\n```\n\n36\\. Filter Duplicate Elements\n\nThis snippet removes duplicate values in an array.\n\n```\nconst filterNonUnique = arr =\u003e [ ...new Set(arr)];\nfilterNonUnique([1, 2, 2, 3, 4, 4, 5]); // [1, 2, 3, 4, 5]\n\n```\n\n37\\. findKey\n\nThis snippet returns the first key that satisfies a given function.\n\n```\nconst findKey = (obj, fn) =\u003e Object.keys(obj).find(key =\u003e fn(obj[key], key, obj));\n\nfindKey(\n  {\n    barney: { age: 36, active: true },\n    fred: { age: 40, active: false },\n    pebbles: { age: 1, active: true }\n  },\n  o =\u003e o['active']\n); // 'barney'\n\n```\n\n38\\. findLast\n\nThis snippet returns the last element for which a given function returns a truthy value.\n\n```\nconst findLast = (arr, fn) =\u003e arr.filter(fn).pop();\n\nfindLast([1, 2, 3, 4], n =\u003e n % 2 === 1); // 3\n\n```\n\n39\\. flatten\n\nThis snippet flattens an array up to a specified depth using recursion.\n\n```\nconst flatten = (arr, depth = 1) =\u003e\n  arr.reduce((a, v) =\u003e a.concat(depth \u003e 1 \u0026\u0026 Array.isArray(v) ? flatten(v, depth - 1) : v), []);\n\nflatten([1, [2], 3, 4]); // [1, 2, 3, 4]\nflatten([1, [2, [3, [4, 5], 6], 7], 8], 2); // [1, 2, 3, [4, 5], 6, 7, 8]\n\n```\n\n40\\. forEachRight\n\nThis snippet executes a function for each element of an array starting from the array's last element.\n\n```\nconst forEachRight = (arr, callback) =\u003e\n  arr\n    .slice(0)\n    .reverse()\n    .forEach(callback);\n\nforEachRight([1, 2, 3, 4], val =\u003e console.log(val)); // '4', '3', '2', '1'\n\n```\n\n41\\. forOwn\n\nThis snippet iterates on each property of an object and iterates a callback for each one respectively.\n\n```\nconst forOwn = (obj, fn) =\u003e Object.keys(obj).forEach(key =\u003e fn(obj[key], key, obj));\nforOwn({ foo: 'bar', a: 1 }, v =\u003e console.log(v)); // 'bar', 1\n\n```\n\n42\\. functionName\n\nThis snippet prints the name of a function into the console.\n\n```\nconst functionName = fn =\u003e (console.debug(fn.name), fn);\n\nfunctionName(Math.max); // max (logged in debug channel of console)\n\n```\n\n43\\. Get Time From Date\n\nThis snippet can be used to get the time from a `Date`object as a string.\n\n```\nconst getColonTimeFromDate = date =\u003e date.toTimeString().slice(0, 8);\n\ngetColonTimeFromDate(new Date()); // \"08:38:00\"\n\n```\n\n44\\. Get Days Between Dates\n\nThis snippet can be used to find the difference in days between two dates.\n\n```\nconst getDaysDiffBetweenDates = (dateInitial, dateFinal) =\u003e\n  (dateFinal - dateInitial) / (1000 * 3600 * 24);\n\ngetDaysDiffBetweenDates(new Date('2019-01-13'), new Date('2019-01-15')); // 2\n\n```\n\n45\\. getStyle\n\nThis snippet can be used to get the value of a CSS rule for a particular element.\n\n```\nconst getStyle = (el, ruleName) =\u003e getComputedStyle(el)[ruleName];\n\ngetStyle(document.querySelector('p'), 'font-size'); // '16px'\n\n```\n\n46\\. getType\n\nThis snippet can be used to get the type of a value.\n\n```\nconst getType = v =\u003e\n  v === undefined ? 'undefined' : v === null ? 'null' : v.constructor.name.toLowerCase();\n\ngetType(new Set([1, 2, 3])); // 'set'\n\n```\n\n47\\. hasClass\n\nThis snippet checks whether an element has a particular class.\n\n```\nconst hasClass = (el, className) =\u003e el.classList.contains(className);\nhasClass(document.querySelector('p.special'), 'special'); // true\n\n```\n\n48\\. head\n\nThis snippet returns the `head` of a list.\n\n```\nconst head = arr =\u003e arr[0];\n\nhead([1, 2, 3]); // 1\n\n```\n\n49\\. hide\n\nThis snippet can be used to hide all elements specified.\n\n```\nconst hide = (...el) =\u003e [...el].forEach(e =\u003e (e.style.display = 'none'));\n\nhide(document.querySelectorAll('img')); // Hides all \u003cimg\u003e elements on the page\n\n```\n\n50\\. httpsRedirect\n\nThis snippet can be used to redirect from HTTP to HTTPS in a particular domain.\n\n```\nconst httpsRedirect = () =\u003e {\n  if (location.protocol !== 'https:') location.replace('https://' + location.href.split('//')[1]);\n};\n\nhttpsRedirect(); // If you are on http://mydomain.com, you are redirected to https://mydomain.com\n\n```\n\n51\\. indexOfAll\n\nThis snippet can be used to get all indexes of a value in an array, which returns an empty array, in case this value is not included in it.\n\n```\nconst indexOfAll = (arr, val) =\u003e arr.reduce((acc, el, i) =\u003e (el === val ? [...acc, i] : acc), []);\n\nindexOfAll([1, 2, 3, 1, 2, 3], 1); // [0,3]\nindexOfAll([1, 2, 3], 4); // []\n\n```\n\n52\\. initial\n============\n\nThis snippet returns all elements of an array except the last one.\n\n```\nconst initial = arr =\u003e arr.slice(0, -1);\n\ninitial([1, 2, 3]); // [1,2]const initial = arr =\u003e arr.slice(0, -1);\ninitial([1, 2, 3]); // [1,2]\n\n```\n\n53\\. insertAfter\n\nThis snippet can be used to insert an HTML string after the end of a particular element.\n\n```\nconst insertAfter = (el, htmlString) =\u003e el.insertAdjacentHTML('afterend', htmlString);\n\ninsertAfter(document.getElementById('myId'), '\u003cp\u003eafter\u003c/p\u003e'); // \u003cdiv id=\"myId\"\u003e...\u003c/div\u003e \u003cp\u003eafter\u003c/p\u003e\n\n```\n\n54\\. insertBefore\n\nThis snippet can be used to insert an HTML string before a particular element.\n\n```\nconst insertBefore = (el, htmlString) =\u003e el.insertAdjacentHTML('beforebegin', htmlString);\n\ninsertBefore(document.getElementById('myId'), '\u003cp\u003ebefore\u003c/p\u003e'); // \u003cp\u003ebefore\u003c/p\u003e \u003cdiv id=\"myId\"\u003e...\u003c/div\u003e\n\n```\n\n55\\. intersection\n\nThis snippet can be used to get an array with elements that are included in two other arrays.\n\n```\nconst intersection = (a, b) =\u003e {\n  const s = new Set(b);\n  return a.filter(x =\u003e s.has(x));\n};\n\nintersection([1, 2, 3], [4, 3, 2]); // [2, 3]\n\n```\n\n56\\. intersectionBy\n\nThis snippet can be used to return a list of elements that exist in both arrays, after a particular function has been executed to each element of both arrays.\n\n```\nconst intersectionBy = (a, b, fn) =\u003e {\n  const s = new Set(b.map(fn));\n  return a.filter(x =\u003e s.has(fn(x)));\n};\n\nintersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor); // [2.1]\n\n```\n\n57\\. intersectionWith\n\nThis snippet can be used to return a list of elements that exist in both arrays by using a comparator function.\n\n```\nconst intersectionWith = (a, b, comp) =\u003e a.filter(x =\u003e b.findIndex(y =\u003e comp(x, y)) !== -1);\n\nintersectionWith([1, 1.2, 1.5, 3, 0], [1.9, 3, 0, 3.9], (a, b) =\u003e Math.round(a) === Math.round(b)); // [1.5, 3, 0]\n\n```\n\n58\\. is\n\nThis snippet can be used to check if a value is of a particular type.\n\n```\nconst is = (type, val) =\u003e ![, null].includes(val) \u0026\u0026 val.constructor === type;\n\nis(Array, [1]); // true\nis(ArrayBuffer, new ArrayBuffer()); // true\nis(Map, new Map()); // true\nis(RegExp, /./g); // true\nis(Set, new Set()); // true\nis(WeakMap, new WeakMap()); // true\nis(WeakSet, new WeakSet()); // true\nis(String, ''); // true\nis(String, new String('')); // true\nis(Number, 1); // true\nis(Number, new Number(1)); // true\nis(Boolean, true); // true\nis(Boolean, new Boolean(true)); // true\n\n```\n\n59\\. isAfterDate\n\nThis snippet can be used to check whether a date is after another date.\n\n```\nconst isAfterDate = (dateA, dateB) =\u003e dateA \u003e dateB;\n\nisAfterDate(new Date(2010, 10, 21), new Date(2010, 10, 20)); // true\n\n```\n\n60\\. isAnagram\n\nThis snippet can be used to check whether a particular string is an anagram with another string.\n\n```\nconst isAnagram = (str1, str2) =\u003e {\n  const normalize = str =\u003e\n    str\n      .toLowerCase()\n      .replace(/[^a-z0-9]/gi, '')\n      .split('')\n      .sort()\n      .join('');\n  return normalize(str1) === normalize(str2);\n};\n\nisAnagram('iceman', 'cinema'); // true\n\n```\n\n61\\. isArrayLike\n\nThis snippet can be used to check if a provided argument is iterable like an array.\n\n```\nconst isArrayLike = obj =\u003e obj != null \u0026\u0026 typeof obj[Symbol.iterator] === 'function';\n\nisArrayLike(document.querySelectorAll('.className')); // true\nisArrayLike('abc'); // true\nisArrayLike(null); // false\n\n```\n\n62\\. isBeforeDate\n\nThis snippet can be used to check whether a date is before another date.\n\n```\nconst isBeforeDate = (dateA, dateB) =\u003e dateA \u003c dateB;\n\nisBeforeDate(new Date(2010, 10, 20), new Date(2010, 10, 21)); // true\n\n```\n\n63\\. isBoolean\n\nThis snippet can be used to check whether an argument is a boolean.\n\n```\nconst isBoolean = val =\u003e typeof val === 'boolean';\n\nisBoolean(null); // false\nisBoolean(false); // true\n\n```\n\n64\\. isBrowser\n\nThis snippet can be used to determine whether the current runtime environment is a browser. This is helpful for avoiding errors when running front-end modules on the server (Node).\n\n```\nconst isBrowser = () =\u003e ![typeof window, typeof document].includes('undefined');\n\nisBrowser(); // true (browser)\nisBrowser(); // false (Node)\n\n```\n\n65\\. isBrowserTabFocused\n\nThis snippet can be used to determine whether the browser tab is focused.\n\n```\nconst isBrowserTabFocused = () =\u003e !document.hidden;\n\nisBrowserTabFocused(); // true\n\n```\n\n66\\. isLowerCase\n\nThis snippet can be used to determine whether a string is lower case.\n\n```\nconst isLowerCase = str =\u003e str === str.toLowerCase();\n\nisLowerCase('abc'); // true\nisLowerCase('a3@$'); // true\nisLowerCase('Ab4'); // false\n\n```\n\n67\\. isNil\n\nThis snippet can be used to check whether a value is `null` or `undefined`.\n\n```\nconst isNil = val =\u003e val === undefined || val === null;\n\nisNil(null); // true\nisNil(undefined); // true\n\n```\n\n68\\. isNull\n\nThis snippet can be used to check whether a value is `null`.\n\n```\nconst isNull = val =\u003e val === null;\n\nisNull(null); // true\n\n```\n\n69\\. isNumber\n\nThis snippet can be used to check whether a provided value is a number.\n\n```\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) \u0026\u0026 isFinite(n);\n}\n\nisNumber('1'); // false\nisNumber(1); // true\n\n```\n\n70\\. isObject\n\nThis snippet can be used to check whether a provided value is an object. It uses the Object constructor to create an object wrapper for the given value.\n\nIf it is already an object, then an object type that corresponds to the given value will be returned. Otherwise, a new object will be returned.\n\n```\nconst isObject = obj =\u003e obj === Object(obj);\n\nisObject([1, 2, 3, 4]); // true\nisObject([]); // true\nisObject(['Hello!']); // true\nisObject({ a: 1 }); // true\nisObject({}); // true\nisObject(true); // false\n\n```\n\n71\\. isObjectLike\n\nThis snippet can be used to check if a value is not `null`and that its `typeof` is \"object\".\n\n```\nconst isObjectLike = val =\u003e val !== null \u0026\u0026 typeof val === 'object';\n\nisObjectLike({}); // true\nisObjectLike([1, 2, 3]); // true\nisObjectLike(x =\u003e x); // false\nisObjectLike(null); // false\n\n```\n\n72\\. isPlainObject\n\nThis snippet checks whether a value is an object created by the Object constructor.\n\n```\nconst isPlainObject = val =\u003e !!val \u0026\u0026 typeof val === 'object' \u0026\u0026 val.constructor === Object;\n\nisPlainObject({ a: 1 }); // true\nisPlainObject(new Map()); // false\n\n```\n\n73\\. isPromiseLike\n\nThis snippet checks whether an object looks like a `Promise`.\n\n```\nconst isPromiseLike = obj =\u003e\n  obj !== null \u0026\u0026\n  (typeof obj === 'object' || typeof obj === 'function') \u0026\u0026\n  typeof obj.then === 'function';\n\nisPromiseLike({\n  then: function() {\n    return '';\n  }\n}); // true\nisPromiseLike(null); // false\nisPromiseLike({}); // false\n\n```\n\n74\\. isSameDate\n\nThis snippet can be used to check whether two dates are equal.\n\n```\nconst isSameDate = (dateA, dateB) =\u003e dateA.toISOString() === dateB.toISOString();\n\nisSameDate(new Date(2010, 10, 20), new Date(2010, 10, 20)); // true\n\n```\n\n75\\. isString\n\nThis snippet can be used to check whether an argument is a string.\n\n```\nconst isString = val =\u003e typeof val === 'string';\n\nisString('10'); // true\n\n```\n\n76\\. isSymbol\n\nThis snippet can be used to check whether an argument is a symbol.\n\n```\nconst isSymbol = val =\u003e typeof val === 'symbol';\n\nisSymbol(Symbol('x')); // true\n\n```\n\n77\\. isUndefined\n\nThis snippet can be used to check whether a value is `undefined`.\n\n```\nconst isUndefined = val =\u003e val === undefined;\n\nisUndefined(undefined); // true\n\n```\n\n78\\. isUpperCase\n\nThis snippet can be used to check whether a string is upper case.\n\n```\nconst isUpperCase = str =\u003e str === str.toUpperCase();\n\nisUpperCase('ABC'); // true\nisLowerCase('A3@$'); // true\nisLowerCase('aB4'); // false\n\n```\n\n79\\. isValidJSON\n\nThis snippet can be used to check whether a string is a valid JSON.\n\n```\nconst isValidJSON = str =\u003e {\n  try {\n    JSON.parse(str);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nisValidJSON('{\"name\":\"Adam\",\"age\":20}'); // true\nisValidJSON('{\"name\":\"Adam\",age:\"20\"}'); // false\nisValidJSON(null); // true\n\n```\n\n80\\. last\n\nThis snippet returns the last element of an array\n\n```\nconst last = arr =\u003e arr[arr.length - 1];\n\nlast([1, 2, 3]); // 3\n\n```\n\n81\\. matches\n\nThis snippet compares two objects to determine if the first one contains the same property values as the second one.\n\n```\nconst matches = (obj, source) =\u003e\n  Object.keys(source).every(key =\u003e obj.hasOwnProperty(key) \u0026\u0026 obj[key] === source[key]);\n\nmatches({ age: 25, hair: 'long', beard: true }, { hair: 'long', beard: true }); // true\nmatches({ hair: 'long', beard: true }, { age: 25, hair: 'long', beard: true }); // false\n\n```\n\n82\\. maxDate\n\nThis snippet can be used to get the latest date.\n\n```\nconst maxDate = (...dates) =\u003e new Date(Math.max.apply(null, ...dates));\n\nconst array = [\n  new Date(2017, 4, 13),\n  new Date(2018, 2, 12),\n  new Date(2016, 0, 10),\n  new Date(2016, 0, 9)\n];\nmaxDate(array); // 2018-03-11T22:00:00.000Z\n\n```\n\n83\\. maxN\n\nThis snippet returns the `n` largest elements from a list. If `n`is greater than or equal to the list's length, then it will return the original list (sorted in descending order).\n\n```\nconst maxN = (arr, n = 1) =\u003e [...arr].sort((a, b) =\u003e b - a).slice(0, n);\n\nmaxN([1, 2, 3]); // [3]\nmaxN([1, 2, 3], 2); // [3,2]\n\n```\n\n84\\. minDate\n\nThis snippet can be used to get the earliest date.\n\n```\nconst minDate = (...dates) =\u003e new Date(Math.min.apply(null, ...dates));\n\nconst array = [\n  new Date(2017, 4, 13),\n  new Date(2018, 2, 12),\n  new Date(2016, 0, 10),\n  new Date(2016, 0, 9)\n];\nminDate(array); // 2016-01-08T22:00:00.000Z\n\n```\n\n85\\. minN\n\nThis snippet returns the `n` smallest elements from a list. If `n`is greater than or equal to the list's length, then it will return the original list (sorted in ascending order).\n\n```\nconst minN = (arr, n = 1) =\u003e [...arr].sort((a, b) =\u003e a - b).slice(0, n);\n\nminN([1, 2, 3]); // [1]\nminN([1, 2, 3], 2); // [1,2]\n\n```\n\n86\\. negate\n\nThis snippet can be used to apply the not operator (`!`) to a predicate function with its arguments.\n\n```\nconst negate = func =\u003e (...args) =\u003e !func(...args);\n\n[1, 2, 3, 4, 5, 6].filter(negate(n =\u003e n % 2 === 0)); // [ 1, 3, 5 ]\n\n```\n\n87\\. nodeListToArray\n\nThis snippet can be used to convert a `nodeList` to an array.\n\n```\nconst nodeListToArray = nodeList =\u003e [...nodeList];\n\nnodeListToArray(document.childNodes); // [ \u003c!DOCTYPE html\u003e, html ]\n\n```\n\n88\\. pad\n\nThis snippet can be used to `pad` a string on both sides with a specified character if it is shorter than the specified length.\n\n```\nconst pad = (str, length, char = ' ') =\u003e\n  str.padStart((str.length + length) / 2, char).padEnd(length, char);\n\npad('cat', 8); // '  cat   '\npad(String(42), 6, '0'); // '004200'\npad('foobar', 3); // 'foobar'\n\n```\n\n89\\. radsToDegrees\n\nThis snippet can be used to convert an angle from radians to degrees.\n\n```\nconst radsToDegrees = rad =\u003e (rad * 180.0) / Math.PI;\n\nradsToDegrees(Math.PI / 2); // 90\n\n```\n\n90\\. Random Hexadecimal Color Code\n\nThis snippet can be used to generate a random hexadecimal color code.\n\n```\nconst randomHexColorCode = () =\u003e {\n  let n = (Math.random() * 0xfffff * 1000000).toString(16);\n  return '#' + n.slice(0, 6);\n};\n\nrandomHexColorCode(); // \"#e34155\"\n\n```\n\n91\\. randomIntArrayInRange\n\nThis snippet can be used to generate an array with `n` random integers in a specified range.\n\n```\nconst randomIntArrayInRange = (min, max, n = 1) =\u003e\n  Array.from({ length: n }, () =\u003e Math.floor(Math.random() * (max - min + 1)) + min);\n\nrandomIntArrayInRange(12, 35, 10); // [ 34, 14, 27, 17, 30, 27, 20, 26, 21, 14 ]\n\n```\n\n92\\. randomIntegerInRange\n\nThis snippet can be used to generate a random integer in a specified range.\n\n```\nconst randomIntegerInRange = (min, max) =\u003e Math.floor(Math.random() * (max - min + 1)) + min;\n\nrandomIntegerInRange(0, 5); // 3\n\n```\n\n93\\. randomNumberInRange\n\nThis snippet can be used to return a random number in a specified range.\n\n```\nconst randomNumberInRange = (min, max) =\u003e Math.random() * (max - min) + min;\n\nrandomNumberInRange(2, 10); // 6.0211363285087005\n\n```\n\n94\\. readFileLines\n\nThis snippet can be used to read a file by getting an array of lines from a file.\n\n```\nconst fs = require('fs');\nconst readFileLines = filename =\u003e\n  fs\n    .readFileSync(filename)\n    .toString('UTF8')\n    .split('\\n');\n\nlet arr = readFileLines('test.txt');\nconsole.log(arr); // ['line1', 'line2', 'line3']\n\n```\n\n95\\. Redirect to a URL\n\nThis snippet can be used to do a redirect to a specified URL.\n\n```\nconst redirect = (url, asLink = true) =\u003e\n  asLink ? (window.location.href = url) : window.location.replace(url);\n\nredirect('https://google.com');\n\n```\n\n96\\. reverse\n\nThis snippet can be used to reverse a string.\n\n```\nconst reverseString = str =\u003e [...str].reverse().join('');\n\nreverseString('foobar'); // 'raboof'\n\n```\n\n97\\. round\n\nThis snippet can be used to round a number to a specified number of digits.\n\n```\nconst round = (n, decimals = 0) =\u003e Number(`${Math.round(`${n}e${decimals}`)}e-${decimals}`);\n\nround(1.005, 2); // 1.01\n\n```\n\n98\\. runPromisesInSeries\n\nThis snippet can be used to run an array of promises in series.\n\n```\nconst runPromisesInSeries = ps =\u003e ps.reduce((p, next) =\u003e p.then(next), Promise.resolve());\nconst delay = d =\u003e new Promise(r =\u003e setTimeout(r, d));\n\nrunPromisesInSeries([() =\u003e delay(1000), () =\u003e delay(2000)]);\n// Executes each promise sequentially, taking a total of 3 seconds to complete\n\n```\n\n99\\. sample\n\nThis snippet can be used to get a random number from an array.\n\n```\nconst sample = arr =\u003e arr[Math.floor(Math.random() * arr.length)];\n\nsample([3, 7, 9, 11]); // 9\n\n```\n\n100\\. sampleSize\n\nThis snippet can be used to get `n`random elements from unique positions from an array up to the size of the array. Elements in the array are shuffled using the [Fisher-Yates algorithm](https://github.com/30-seconds/30-seconds-of-code#shuffle)\n\n```\nconst sampleSize = ([...arr], n = 1) =\u003e {\n  let m = arr.length;\n  while (m) {\n    const i = Math.floor(Math.random() * m--);\n    [arr[m], arr[i]] = [arr[i], arr[m]];\n  }\n  return arr.slice(0, n);\n};\n\nsampleSize([1, 2, 3], 2); // [3,1]\nsampleSize([1, 2, 3], 4); // [2,3,1]\n```.\n```",
            "contentLength": 28275,
            "isShared": true,
            "snippetFileOrder": 0,
            "createdAt": "2021-07-29T09:02:53Z",
            "updatedAt": "2021-07-29T09:02:53Z"
          }
        ]
      },
      {
        "id": 1060414,
        "guid": "d6e012ef08fb3b1c1e20",
        "title": "psql",
        "description": "psql",
        "isPrivate": false,
        "createdAt": "2021-07-27T20:17:53Z",
        "updatedAt": "2021-07-27T20:17:54Z",
        "gistId": "b383b71b22e2aeb7f619966c5210bb13",
        "gistboxId": null,
        "syncToGist": true,
        "gistUpdatedAt": null,
        "pagePermission": null,
        "starredBy": [],
        "createdBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "lastUpdatedBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "files": [
          {
            "id": 1565094,
            "guid": "a2d3e700e95815afce5a",
            "filename": "psql.md",
            "filetype": "markdown",
            "content": "Data Types\n----------\n\nBoth MySQL and PostgreSQL support many data types, ranging from traditional ones (e.g., Integer, Date, Timestamp) to complex ones (e.g., JSON, XML, TEXT). However, there is a difference between these two database products when it comes to the capability of catering to complex, real-time data search requirements. Let's take a look at both.\n\nPostgreSQL not only supports traditional SQL data types (e.g., Numeric, Strings, Date, Decimal, etc.) but also supports unstructured data types (e.g., JSON, XML, and HSTORE) as well as network data types, bit strings, etc. What makes PostgreSQL stand out is its support for a wider range of data types, such as ARRAYs, NETWORK types, and Geometric data types (including advanced spatial data functions) to store and process spatial data. Supported data types can be found [here](https://www.postgresql.org/docs/11/datatype.html). The support for spatial data types and functions comes from an external module called PostGIS, which is an open-source extension. \n\nMySQL supports [various data types](https://dev.mysql.com/doc/refman/8.0/en/data-types.html) that help a variety of applications store and process data in different formats, including the following: traditional data types to store Integers, Characters or Strings, Date with Timestamps and Time Zones, Boolean, Float, Decimal, Large Text, and BLOB  to store binary data (like images). There is no support for geometric data types in MySQL.\n\nJSON: PostgreSQL vs. MySQL \n---------------------------\n\nPostgreSQL started supporting JSON data types from version 9.2. The JSON data support in PostgreSQL is much more advanced compared to MySQL. There are several JSON-specific operators and functions, making data searches in JSON documents very efficient. The JSONB feature from PostgreSQL-9.4, which stores JSON in a binary format, started supporting Full-Text Indexing (known as GIN Indexing), and this really makes Full-Text searching on JSON documents much faster.\n\nMySQL just started supporting JSON data types recently (from Version 5.7), years later than PostgreSQL. The JSON data columns can be queried using SQL queries, and JSON attributes can be indexed as well. However, the support for JSON-specific functions is limited compared to PostgreSQL. Another limitation of MySQL is that there is no support for Full-Text Indexing on JSON columns. Since MySQL is not fully SQL compliant, it may not be a great choice for storing and processing JSON data.\n\nReplication \u0026 Clustering \n-------------------------\n\nBoth MySQL and PostgreSQL have replication and clustering capabilities and can ensure data operations are distributed horizontally. Let's take a more detailed look.\n\nMySQL supports a Primary-replica and Primary-to-multiple-replicas replication mechanism, which ensures that all data changes are replicated from a primary to a replica database via SQLs. This is why replication can only be asynchronous, which can be disadvantageous in terms of performance and scalability.\n\nThe advantage of MySQL replication is that the replicas are not read-only. This means that if an application fails over to a replicas when a primary database crashes, replicas can consume both reads and writes to ensure that applications are working seamlessly. DBAs will then need to make sure that a replica is out of replica mode and all the changes are reverse-replicated back to the primary. However, replication can be slow when there are long-running SQLs.\n\nMySQL also supports NDB cluster, which is a multi-primary replication mechanism. This type of replication can be beneficial to high-transaction environments demanding horizontal scalability. However, there could be serious performance and latency issues if not implemented with care.\n\nPostgreSQL replication is very popular and reliable. Unlike MySQL, PostgreSQL's replication is based on WAL files, which makes it more reliable, faster, and easier to manage. Postgres supports primary-replica and primary-to-multiple-replicas, including cascading replication. The replication in Postgres is termed as streaming or physical replication, which can be synchronous or asynchronous.\n\nBy default, replication is asynchronous, and replicas can cater to read requests. If the application (like a web application) demands the data snapshot on replicas to be the same as the primary, then synchronous replication will help. The caveat would be that the primary will hang if the transactions are not committed to the replica.\n\nReplication at the table level can be achieved using external open-source tools such as Slony, Bucardo, Londiste, RubyRep, etc. All of them perform trigger-based replication. PostgreSQL also supports logical replication, which performs table-level replication using WAL records and removes the complexity brought in by trigger-based replication. Initially, logical replication was supported by an extension called pglogical and has been part of the PostgreSQL core from version 10. \n\nViews\n-----\n\nMySQL supports views; the number of tables used by the SQLs underneath the view is limited to 61. Views are like virtual tables that do not store data physically, and materialized views are not supported in MySQL. Views created with simple SQLs can be updated, while views created with complex SQLs cannot.\n\nPostgreSQL supports views that are partially similar to MySQL. While views created with simple SQLs can be updated, the views created with complex SQLs cannot be updated. But there is a work-around to update complex views using RULES. Also, if the data is to be stored physically, PostgreSQL supports Materialized Views, which can be REFRESHED, and Indexes as well.\n\nTriggers\n--------\n\nMySQL supports Triggers for AFTER and BEFORE events for INSERT, UPDATE, and DELETE statements. Triggers cannot execute dynamic SQL statements or stored procedures.\n\nPostgreSQL triggers are advanced; the supported triggering events are AFTER, BEFORE, and INSTEAD OF triggers for INSERT, UPDATE, and DELETE events. If you need to execute a complex SQL when the trigger gets invoked, you can do this using functions. Yes, the triggers in PostgreSQL can also execute functions dynamically. \n\n```\nCREATE TRIGGER audit\n\nAFTER INSERT OR UPDATE OR DELETE ON employee\n\n    FOR EACH ROW EXECUTE FUNCTION employee_audit_func();\n```\n\nStored Procedures\n-----------------\n\nStored Procedures are an important part of databases and cater to complex data-extraction requirements. Developers often use stored procedures as part of their database development process. Both MySQL and PostgreSQL databases support stored procedures, but [MySQL](https://dev.mysql.com/doc/refman/8.0/en/stored-program-restrictions.html) only supports standard SQL syntaxes, while PostgreSQL supports very advanced procedures.\n\nStored Procedures are implemented in the form of functions in PostgreSQL with a RETURN VOID clause. The part of this feature that developers love is the support it has for various languages that are not supported by MySQL, such as Ruby, Perl (PlPerl), Python (PlPython), TCL, Pl/PgSQL, SQL, and JavaScript.\n\nQuery \n------\n\nAs mentioned earlier, MySQL is not a fully SQL-compliant database and does not support all SQL features, making it a tough choice for developers and not a great choice for data warehousing applications, as there will be a need here for advanced and complex SQLs. \n\nHere are some limitations to be considered when choosing MySQL:\n\n-   Certain UPDATE SQL results can be surprising and not per the SQL standard, as seen below:\n\n```\nmysql\u003e select * from test;\n\n+------+------+\n\n| c | c1   |\n\n+------+------+\n\n|   10 |  100 |\n\n+------+------+\n\n1 row in set (0.01 sec)\n\nmysql\u003e update test set c=c+1, c1=c;\n\nQuery OK, 1 row affected (0.01 sec)\n\nRows matched: 1  Changed: 1  Warnings: 0\n\nmysql\u003e  select * from test;\n\n+------+------+\n\n| c | c1   |\n\n+------+------+\n\n|   11 |   11 |\n\n+------+------+\n\n1 row in set (0.00 sec)\n```\n\nThe SQL standard expected results are supposed to be as shown here:\n\n```\nmysql\u003e  select * from test;\n\n+------+------+\n\n| c | c1   |\n\n+------+------+\n\n|   11 |   10 |\n\n+------+------+\n```\n\n-   Cannot UPDATE or DELETE statements; cannot SELECT from the same table. Below is an example of a DELETE:\n\n```\nmysql\u003e delete from test where c in (select t1.c from test t1, test t2 where t1.c=t2.c);\n\nERROR 1093 (HY000): \n```\n\n-   LIMIT clause is not allowed in the subqueries:\n\n```\nmysql\u003e select * from test where c in (select c from test2 where c\u003c3 limit 1);\n\nERROR 1235 (42000): \n```\n\nMySQL doesn't yet support \"LIMIT \u0026 IN/ALL/ANY/SOME subquery.\"\n\nAlso, MySQL does not support standard SQL clauses such as FULL OUTER JOINS, INTERSECT, and EXCEPT, which are commonly used. Index types, including Partial Indexes, Bitmap Indexes, and Expression Indexes, are also not supported, and these are important to speed up query performances.\n\nPostgreSQL, on the other hand, is a fully SQL-compliant database and supports all SQL standard features. Applications of pretty much any nature from any domain can use PostgreSQL as their database, which makes it a popular choice for OLTP, OLAP, and DWH environments. PostgreSQL is the best choice for developers who have to write complex SQLs.\n\nPartitioning \n-------------\n\nMySQL and PostgreSQL both support table partitioning to improve the performance of queries that hit large-size Tables. However, there are certain limitations in both the databases. \n\nMySQL supports declarative table partitioning; supported partition types are RANGE, LIST, HASH, KEY, and COLUMNS (RANGE and LIST). SUBPARTITIONING is also supported. However, this feature may not be very flexible for DBAs because of certain limitations. Let's take a look at them:\n\n-   From MySQL version 8.0, table partitioning is only possible with InnoDB and NDB storage engines, not with any other storage engines like MyISAM.\n-   If the partition key column is not part of all the PRIMARY and UNIQUE KEY constraints of the table, then it is not possible to partition the table at all. The only other option is to partition a table with no PRIMARY or UNIQUE KEYs, which is a rare occurrence in the RDBMS world.\n-   Support for placing the table partitions on tablespaces was phased out from MySQL-5.7.24. This means, DBAs cannot leverage the benefit of disk I/O balancing from table partitioning.\n\n```\nmysql\u003e create table emp (id int not null, fname varchar (30), lname varchar(30), store_id int not null ) partition by range (store_id) ( partition p0 values less than (6) tablespace tbs, partition p1 values less than(20) tablespace tbs1, partition p2 values less than (40) tablespace tbs2);\n\nERROR 1478 (HY000): InnoDB : A partitioned table is not allowed in a shared tablespace.\n\nmysql\u003e\n```\n\nPostgreSQL supports two types of table partitioning: table partitioning by inheritance and declarative partitioning. Declarative partitioning was introduced in Version 10 and is similar to MySQL, whereas partitioning by inheritance is performed using triggers or rules. Performance benefits are significantly higher when an accurate partitioning strategy is implemented on tables with large volumes of data. Partitioning types supported are RANGE, LIST, and HASH. With the introduction of declarative partitioning, complexity and performance challenges due to triggers and rules are eradicated. \n\nBoth types of partitioning for PostgreSQL have their benefits and limitations:\n\n-   Similar to MySQL, declarative partitions in PostgreSQL can only be implemented if the partition key column is part of all the primary and UNIQUE KEY constraints.\n-   When partitioning a table by inheritance, child tables cannot inherit primary key or UNIQUE KEY constraints from the primary table.\n-   INSERTs and UPDATEs on the primary table are not automatically redirected to child tables; to do so, triggers or rules must be implemented, and the same needs to be done for automatically creating new partitions.\n\nTable Scalability \n------------------\n\nTable segments growing bigger in size can pose performance problems, and queries hitting those tables take more resources and time to complete. Efficient table design is thus important for good performance. MySQL and PostgreSQL have different options for this.\n\nMySQL supports B-Tree Indexing and Partitioning to improve query performance on larger tables. However, the lack of support for Bitmap, Partial, and Functional Indexes in MySQL leaves DBAs with limited tuning options. Partitioning of larger tables can improve performance, but partition tables in MySQL cannot be placed in general tablespaces, which is a serious showstopper for I/O balancing.\n\nPostgreSQL has several indexing and two types of partitioning options to improve data operations on a scalable table. Expression Indexing, Partial Indexing, Bitmap Indexing, and Full-Text Indexing can help improve query performance on larger-size Tables, which in turn can improve query performance significantly. In PostgreSQL, table partitions and Indexes can be placed in separate tablespaces on different disk file systems, which can greatly improve table scalability as well.\n\nTo achieve horizontal table-level scalability in Postgres (horizontal table partitioning), commercially developed products based on Postgres, such as CitusDB, Greenplum, and IBM Netezza, are the way to go. Open-source Postgres itself does not support horizontal table partitioning; PostgresXC is an option but is not popular due to its performance and maintenance overhead.\n\nStorage\n-------\n\nData storage is a critical capability of any database. PostgreSQL and MySQL provide various options for storing data. Storing data means storing the physical database objects, such as Tables and Indexes, on a disk. This section focuses on two types of storage options: common storage and pluggable storage. \n\nPostgreSQL has a common storage feature called tablespaces, which can accommodate physical objects like Tables, Indexes, and Materialized Views. With the help of tablespaces, the objects can be grouped and stored across multiple physical locations, which helps distribute I/O in an efficient way. PostgreSQL does not support pluggable storage engines, although this is expected in future releases. \n\nMySQL, similar to PostgreSQL, has a tablespaces feature (part of InnoDB engine) that can help DBAs group and store physical objects (Tables, Indexes, etc.), and this can help distribute I/O. MySQL also supports pluggable storage engines, which can help the database meet specific storage requirements for various types of applications such as OLTP, Data Warehousing, etc. This is one of the biggest advantages of using MySQL as a database. The pluggable storage feature can be enabled by installing plugins, and although configuring pluggable storage involves complexity, applications are completely oblivious to this.\n\nData Models Supported\n---------------------\n\nNoSQL capabilities in an RDBMS database can help deal with unstructured data, for example, JSON, XML, and other TEXT data types. \n\nMySQL has limited NoSQL capabilities. JSON data types have been introduced in MySQL from Version 5.7 and have a long way to go to become more mature.\n\nPostgreSQL has become a very popular NoSQL choice for developers in the last three years and has enormous JSON capabilities. With JSON and JSONB data types, JSON-based data operations can be significantly faster and more efficient. JSON data can also be Indexed with B-Tree and GIN for improved searches, and XML and HSTORE data types can handle XML formats and other complex text-format data as well. With the support for spatial data types, PostgreSQL is no doubt a complete multi-model database.\n\nSecurity\n--------\n\nDatabase security plays a vital role in securing data from unauthorized access. Secured access is implemented at various levels in the database, including the object level and connection level.\n\nMySQL grants access to the database, objects, and connections via ROLES and PRIVILEGES. Every user must be granted a connection privilege using an SQL for every IP address from which a user is connecting, or connections can be granted all at once to multiple IP addresses as part of a subnet.\n\nHere below, the command grants all privileges on all the objects in the database \"testdb\" to user \"testuser\" from the IP \"192.168.1.1\":\n\n```\nGRANT ALL PRIVILEGES ON testdb.* TO 'testuser@'192.168.1.1' IDENTIFIED BY 'newpassword';\n```\n\nIf the user is connecting from all the IPs of 192.168.1, then this command works:\n\n```\nGRANT ALL PRIVILEGES ON testdb.* TO 'testuser@'192.168.1.*' IDENTIFIED BY 'newpassword';\n```\n\nEvery time the privilege is granted, a password must be specified; otherwise, the user cannot connect.\n\nMySQL also supports SSL-based connections over the network and provides security based on SE-Linux modules. Integration with external authentication systems, such as LDAP and PAM, is part of the MySQL enterprise edition.\n\nPostgreSQL provides access to database objects and data via ROLES and PRIVILEGES using GRANT commands. Connection authentication is done in a simpler way, via a pg_hba.conf authentication file that contains the list of IP addresses along with username and type of access. This is much more reliable and simpler. Below is a sample entry from a pg_hba.conf file:\n\n```\nhost   database  user  address  auth-method  [md5 or trust or reject]\n```\n\nPostgres open-source version supports SSL-based connections and can also be integrated with external authentication systems, including LDAP, Kerberos, and PAM, which are efficient and reliable. \n\nAnalytical functions perform aggregation on a set of rows. There are two types of analytical functions: window functions and aggregate functions. Aggregate functions perform aggregation and return a single aggregate value for a set of rows (like sum, avg, min, max, etc.), whereas analytical functions return a single aggregate value for each of the rows. Both MySQL and PostgreSQL support various analytical functions. MySQL has lately come up with some window functions in Version 8.0, whereas PostgreSQL has been supporting the same for a long time now.\n\nPostgreSQL supports the window functions below: \n\n|\n\nName of the function           \n\n |\n\n  Description\n\n |\n|\n\nCUME_DIST\n\n |\n\nReturn the relative rank of the current row.\n\n |\n|\n\nDENSE_RANK\n\n |\n\nRank the current row within its partition without gaps.\n\n |\n|\n\nFIRST_VALUE\n\n |\n\nReturn a value evaluated against the first row within its partition.\n\n |\n|\n\nLAG\n\n |\n\nReturn a value evaluated at the row that is at a specified physical offset row before the current row within the partition.\n\n |\n|\n\nLAST_VALUE\n\n |\n\nReturn a value evaluated against the last row within its partition.\n\n |\n|\n\nLEAD\n\n |\n\nReturn a value evaluated at the row that is offset rows after the current row within the partition.\n\n |\n|\n\nNTILE\n\n |\n\nDivide rows in a partition as equally as possible and assign each row an integer starting from 1 to the argument value.\n\n |\n|\n\nNTH_VALUE\n\n |\n\nReturn a value evaluated against the nth row in an ordered partition.\n\n |\n|\n\nPERCENT_RANK\n\n |\n\nReturn the relative rank of the current row (rank-1) / (total rows-1)\n\n |\n|\n\nRANK\n\n |\n\nRank the current row within its partition with gaps.\n\n |\n|\n\nROW_NUMBER\n\n |\n\nNumber the current row within its partition starting from 1.\n\n |\n\nMySQL supports pretty much all the window functions that PostgreSQL supports, with the following limitations:\n\n-   Window functions cannot be used as part of UPDATE or DELETE.\n-   DISTINCT is not supported with Window functions.\n-   NESTED window functions are not supported.=\n\nAdministration (GUI Tools)\n--------------------------\n\nMySQL database can be remotely accessed using Oracle's SQL Developer, MySQL Workbench, DBeaver, OmniDB, and so on. For monitoring database performance and health, tools such as Nagios, Cacti, and Zabbix are popular.\n\nPostgreSQL can be GUI-managed using Oracle's SQL Developer, pgAdmin, OmniDB, and DBeaver. Tools popular for monitoring PostgreSQL health and performance are Nagios, Zabbix, and Cacti.\n\nPerformance\n-----------\n\nMySQL database performance-optimization options are very limited, and many Indexes are also not supported. Without full SQL compliance, writing efficient and well-performing SQL queries can be a challenge. MySQL is also not the best choice for large volumes of data. Tablespaces for spreading data across multiple disks are a challenge, since tablespaces are only supported in InnoDB and cannot accommodate table partitions. Simple queries to hit tables can be made to complete faster by creating B-TREE Indexes.\n\nPostgreSQL database is a highly suitable database for any kind of workload: OLTP, OLAP, Data warehousing, and more. It also fully complies with SQL standards, so it is possible to write efficient queries and pl/pgsql programs. With its support for a wide range of Indexes, including B-Tree, Bitmap, Partial, and Full-Text, performance can be greatly improved. Re-indexing and re-organization of tables to remove bloats can also be performed online. Postgres has several configuration options for allocating memory to a database and queries, and partitioned tables can be placed across multiple tablespaces to balance disk I/O.\n\nAdoption\n--------\n\nPostgreSQL is the world's most advanced open source database. Businesses around the world are using PostgreSQL for mission critical workloads. The PostgreSQL community and a few companies such as EnterpriseDB and 2ndQuadrant are making sure that PostgreSQL adoption continues to expand on a global level.\n\nMySQL is definitely not the best choice for RDBMS or ORDBMS applications. Since Oracle's acquisition of MySQL, adoption of MySQL has significantly declined, and development progress in the open-source space has taken a hit as well, inviting criticism from MySQL users. \n\nBest Environments / Stacks\n--------------------------\n\nA stack is a packaged collection of various applications, operating systems, and database technologies that help you easily build web applications.\n\nBoth PostgreSQL and MySQL are part of different stacks used by various organizations and service providers. While MySQL is popular with LAMP stack, PostgreSQL is popular with LAPP stack. The LAPP stack stands for Linux, Apache, Postgres and Php/Python and is gaining in popularity.\n\nLAMP stack stands for Linux Apache MySQL/MongoDB and Php/Python.\n\nThe LAPP stack is an option if the requirement is to use PostgreSQL. Developers can leverage both the NoSQL and RDBMS capabilities of PostgreSQL. Large-platform service providers, such as Amazon and VMware, are also providing services with readily installed LAPP stack modules. \n\nConclusion\n----------\n\nUndoubtedly, PostgreSQL stands as the best-choice database due to its rich features and aggressive development efforts by PostgreSQL developers. Most every organization uses PostgreSQL today, and most domains are adopting PostgreSQL for their applications as well as looking to migrate their legacy applications to it. If you are migrating away from legacy oracle database and want to accomplish this task in days instead of months, see [EDB Postgres Advanced Server](https://www.enterprisedb.com/enterprise-postgres/edb-postgres-advanced-server). EDB Postgres Advanced Server is an enhanced Postgres database with Oracle compatibility and enterprise security features. \n\n​\n\n##### Popular Links\n\n-   [Connecting PostgreSQL using psql and pgAdmin](https://www.enterprisedb.com/postgres-tutorials/connecting-postgresql-using-psql-and-pgadmin)\n-   [How to use PostgreSQL with Django](https://www.enterprisedb.com/postgres-tutorials/how-use-postgresql-django)\n-   [10 Examples of PostgreSQL Stored Procedures](https://www.enterprisedb.com/postgres-tutorials/10-examples-postgresql-stored-procedures)\n-   [How to use PostgreSQL with Laravel](https://www.enterprisedb.com/postgres-tutorials/how-use-postgresql-laravel)\n-   [How to use tables and column aliases...](https://www.enterprisedb.com/postgres-tutorials/how-use-tables-and-column-aliases-when-building-postgresql-query)\n\n##### Featured Links\n\n-   [PostgreSQL vs. SQL Server (MSSQL)...](https://www.enterprisedb.com/blog/microsoft-sql-server-mssql-vs-postgresql-comparison-details-what-differences)\n-   [The Complete Oracle to PostgreSQL Migration...](https://www.enterprisedb.com/blog/the-complete-oracle-to-postgresql-migration-guide-tutorial-move-convert-database-oracle-alternative)\n-   [PostgreSQL vs. MySQL: A 360-degree Comparison...](https://www.enterprisedb.com/blog/postgresql-vs-mysql-360-degree-comparison-syntax-performance-scalability-and-features)\n-   [PostgreSQL Replication and Automatic Failover...](https://www.enterprisedb.com/postgres-tutorials/postgresql-replication-and-automatic-failover-tutorial)\n-   [Postgres on Kubernetes or VMs: A Guide...](https://www.enterprisedb.com/blog/blog/postgres-kubernetes-or-vms-guide-framework-running-databases-best-way)\n\n##### Resources\n\n-   [Postgres Tutorials](https://www.enterprisedb.com/postgres-tutorials)\n-   [The EDB Blog](https://www.enterprisedb.com/blog)\n-   [White Papers](https://www.enterprisedb.com/white-papers)\n-   [The EDB Docs](https://www.enterprisedb.com/docs/)\n-   [Webinars](https://www.enterprisedb.com/webinars)\n\n![](https://www.enterprisedb.com/sites/default/files/styles/thumbnail/public/pictures/picture-537347-1576096705.jpg?itok=cd1Po5tl)\n\n[Pankil Shah](https://www.enterprisedb.com/pankilEDB)\n\nA proud parent of a mischevious Golden Retriever, [Pankil Shah](http://pankilshah.net/) is a Marketing Manager, SaaS Products for EnterpriseDB. Pankil co-founded [Vclassrooming](https://www.vclassrooming.com/), a saas platform to improve the learning outcomes of K12 students.\n\nPopular Posts\n-------------\n\n-   [Connecting PostgreSQL using psql and pgAdmin](https://www.enterprisedb.com/postgres-tutorials/connecting-postgresql-using-psql-and-pgadmin)\n-   [How to use PostgreSQL with Django](https://www.enterprisedb.com/postgres-tutorials/how-use-postgresql-django)\n-   [Microsoft SQL Server (MSSQL) vs. PostgreSQL Comparison in Details - What are the Differences? [2020]](https://www.enterprisedb.com/blog/microsoft-sql-server-mssql-vs-postgresql-comparison-details-what-differences)\n-   [10 Examples of PostgreSQL Stored Procedures](https://www.enterprisedb.com/postgres-tutorials/10-examples-postgresql-stored-procedures)\n-   [How to import and export data using CSV files in ](https://www.enterprisedb.com/postgres-tutorials/how-import-and-export-data-using-csv-files-postgresql)",
            "contentLength": 26414,
            "isShared": true,
            "snippetFileOrder": 0,
            "createdAt": "2021-07-29T09:02:53Z",
            "updatedAt": "2021-07-29T09:02:53Z"
          }
        ]
      },
      {
        "id": 1060415,
        "guid": "3fc3a1b97e289dd193ef",
        "title": "express-mdn.md",
        "description": "",
        "isPrivate": false,
        "createdAt": "2021-07-27T18:14:22Z",
        "updatedAt": "2021-07-27T18:14:23Z",
        "gistId": "49fca99985d895768fbb0cee1a5e935d",
        "gistboxId": null,
        "syncToGist": true,
        "gistUpdatedAt": null,
        "pagePermission": null,
        "starredBy": [],
        "createdBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "lastUpdatedBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "files": [
          {
            "id": 1565095,
            "guid": "6e06df3f0d4e51659628",
            "filename": "express-mdn.md",
            "filetype": "markdown",
            "content": "",
            "contentLength": 50356,
            "isShared": true,
            "snippetFileOrder": 0,
            "createdAt": "2021-07-29T09:02:54Z",
            "updatedAt": "2021-07-29T09:02:54Z"
          }
        ]
      },
      {
        "id": 1060416,
        "guid": "0306032efc2806c67fc2",
        "title": "sitemap",
        "description": "sitemap",
        "isPrivate": true,
        "createdAt": "2021-07-27T16:00:06Z",
        "updatedAt": "2021-07-27T16:00:06Z",
        "gistId": "280a317a7583300111cbadd711812e6f",
        "gistboxId": null,
        "syncToGist": true,
        "gistUpdatedAt": null,
        "pagePermission": null,
        "starredBy": [],
        "createdBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "lastUpdatedBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "files": [
          {
            "id": 1565096,
            "guid": "a75e9be83d1e26e471dc",
            "filename": "sitemap.txt",
            "filetype": "text",
            "content": "https://bgoonz-blog.netlify.app/\n\nhttps://bgoonz-blog.netlify.app/blog/\n\nhttps://bgoonz-blog.netlify.app/blog/platform-docs/\n\nhttps://bgoonz-blog.netlify.app/docs/sitemap/\n\nhttps://bgoonz-blog.netlify.app/docs/\n\nhttps://bgoonz-blog.netlify.app/showcase/\n\nhttps://bgoonz-blog.netlify.app/docs/faq/contact/\n\nhttps://bgoonz-blog.netlify.app/docs/tools/\n\nhttps://bgoonz-blog.netlify.app/blog/blogwcomments/\n\nhttps://bgoonz-blog.netlify.app/blog/blog-archive/\n\nhttps://bgoonz-blog.netlify.app/blog/web-scraping/\n\nhttps://bgoonz-blog.netlify.app/blog/data-structures/\n\nhttps://bgoonz-blog.netlify.app/blog/python-for-js-dev/\n\nhttps://bgoonz-blog.netlify.app/blog/python-resources/\n\nhttps://bgoonz-blog.netlify.app/blog/my-medium/\n\nhttps://bgoonz-blog.netlify.app/docs/about/\n\nhttps://bgoonz-blog.netlify.app/docs/about/npm/\n\nhttps://bgoonz-blog.netlify.app/docs/about/resume/\n\nhttps://bgoonz-blog.netlify.app/docs/about/me/\n\nhttps://bgoonz-blog.netlify.app/docs/about/node/nodejs/\n\nhttps://bgoonz-blog.netlify.app/docs/about/node/intro/\n\nhttps://bgoonz-blog.netlify.app/docs/about/node/install/\n\nhttps://bgoonz-blog.netlify.app/docs/about/node/reading-files/\n\nhttps://bgoonz-blog.netlify.app/docs/about/node/nodevsbrowser/\n\nhttps://bgoonz-blog.netlify.app/docs/about/node/writing-files/\n\nhttps://bgoonz-blog.netlify.app/docs/articles/\n\nhttps://bgoonz-blog.netlify.app/docs/articles/resources/\n\nhttps://bgoonz-blog.netlify.app/docs/articles/ten-jamstack-apis-to-checkout/\n\nhttps://bgoonz-blog.netlify.app/docs/articles/python/\n\nhttps://bgoonz-blog.netlify.app/docs/articles/basic-web-dev/\n\nhttps://bgoonz-blog.netlify.app/docs/articles/algo/\n\nhttps://bgoonz-blog.netlify.app/docs/articles/install/\n\nhttps://bgoonz-blog.netlify.app/docs/articles/reading-files/\n\nhttps://bgoonz-blog.netlify.app/docs/articles/writing-files/\n\nhttps://bgoonz-blog.netlify.app/docs/articles/intro/\n\nhttps://bgoonz-blog.netlify.app/docs/articles/article-compilation/\n\nhttps://bgoonz-blog.netlify.app/docs/faq/\n\nhttps://bgoonz-blog.netlify.app/docs/interact/\n\nhttps://bgoonz-blog.netlify.app/docs/interact/jupyter-notebooks/\n\nhttps://bgoonz-blog.netlify.app/docs/interact/clock/\n\nhttps://bgoonz-blog.netlify.app/docs/links/\n\nhttps://bgoonz-blog.netlify.app/docs/links/my-websites/\n\nhttps://bgoonz-blog.netlify.app/docs/links/social/\n\nhttps://bgoonz-blog.netlify.app/docs/links/medium-links/\n\nhttps://bgoonz-blog.netlify.app/docs/quick-reference/\n\nhttps://bgoonz-blog.netlify.app/docs/quick-reference/installation/\n\nhttps://bgoonz-blog.netlify.app/docs/quick-reference/new-repo-instructions/\n\nhttps://bgoonz-blog.netlify.app/docs/quick-reference/docs/\n\nhttps://bgoonz-blog.netlify.app/docs/quick-reference/emmet/\n\nhttps://bgoonz-blog.netlify.app/docs/react/\n\nhttps://bgoonz-blog.netlify.app/docs/react/react2/\n\nhttps://bgoonz-blog.netlify.app/docs/react/createreactapp/\n\nhttps://bgoonz-blog.netlify.app/docs/tools/plug-ins/\n\nhttps://bgoonz-blog.netlify.app/docs/tools/vscode/\n\nhttps://bgoonz-blog.netlify.app/docs/tools/notes-template/\n\nhttps://bgoonz-blog.netlify.app/notes-template/",
            "contentLength": 3052,
            "isShared": false,
            "snippetFileOrder": 0,
            "createdAt": "2021-07-29T09:02:54Z",
            "updatedAt": "2021-07-29T09:02:54Z"
          }
        ]
      },
      {
        "id": 1060417,
        "guid": "fc0b977253fff13dac59",
        "title": "links.md",
        "description": "",
        "isPrivate": false,
        "createdAt": "2021-07-27T15:19:10Z",
        "updatedAt": "2021-07-27T15:56:45Z",
        "gistId": "783e3b38dd9ca9ca399e26d63231803d",
        "gistboxId": null,
        "syncToGist": true,
        "gistUpdatedAt": null,
        "pagePermission": null,
        "starredBy": [],
        "createdBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "lastUpdatedBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "files": [
          {
            "id": 1565097,
            "guid": "ea4472e74d21e6890933",
            "filename": "links.md",
            "filetype": "markdown",
            "content": "\n[https://caniuse.com/](https://caniuse.com/)\n[https://html-online.com/editor/](https://html-online.com/editor/)\n[https://html-cleaner.com/](https://html-cleaner.com/)\n[https://wordhtml.com/](https://wordhtml.com/)\n[https://stackoverflow.com/](https://stackoverflow.com/)\n[https://www.w3schools.com/](https://www.w3schools.com/)\n[https://developer.mozilla.org/](https://developer.mozilla.org/)\n[https://validator.w3.org/](https://validator.w3.org/)\n[https://github.com/](https://github.com/)\n[https://bitbucket.org/](https://bitbucket.org/)\n[https://dribbble.com/](https://dribbble.com/)\n[https://builtwith.com/](https://builtwith.com/)\n[https://htmltidy.net/](https://htmltidy.net/)\n[https://divtable.com/](https://divtable.com/)\n[https://getbootstrap.com/](https://getbootstrap.com/)\n[https://developers.facebook.com/](https://developers.facebook.com/)\n[https://search.google.com/test/mobile-friendly](https://search.google.com/test/mobile-friendly)\n[https://www.webpagetest.org/](https://www.webpagetest.org/)\n[https://netrenderer.com/](https://netrenderer.com/)\n[http://browsershots.org/](http://browsershots.org/)\n[https://developers.google.com/speed/pagespeed/insights/](https://developers.google.com/speed/pagespeed/insights/)\n[https://fonts.google.com/](https://fonts.google.com/)\n[https://fontawesome.com/](https://fontawesome.com/)\n[https://rgbcolorcode.com/](https://rgbcolorcode.com/)\n[https://www.freepik.com/](https://www.freepik.com/)\n[https://placehold.it/](https://placehold.it/)\n[https://www.xml-sitemaps.com/](https://www.xml-sitemaps.com/)\n[http://www.brokenlinkcheck.com/](http://www.brokenlinkcheck.com/)\n[https://codepen.io/](https://codepen.io/)\n[https://jsfiddle.net/](https://jsfiddle.net/)\n[https://wordpress.org/](https://wordpress.org/)\n[https://www.theblogstarter.com/](https://www.theblogstarter.com/)\n[https://websitesetup.org/](https://websitesetup.org/)\n[https://www.expireddomains.net/](https://www.expireddomains.net/)\n[https://badhtml.com/](https://badhtml.com/)\n[https://1stwebdesigner.com/](https://1stwebdesigner.com/)\n",
            "contentLength": 2059,
            "isShared": true,
            "snippetFileOrder": 0,
            "createdAt": "2021-07-29T09:02:54Z",
            "updatedAt": "2021-07-29T09:02:54Z"
          },
          {
            "id": 1565098,
            "guid": "50b0fe4f99efae02adff",
            "filename": "webdevresources.md",
            "filetype": "markdown",
            "content": "[![can i use](https://html-css-js.com/images/banners/caniuse.jpg)Can I UseProvides browser support information of front-end web technologies. Enter a search term to find out which browsers support it. *caniuse.com*](https://caniuse.com/)\n\n[![Online HTML Editor](https://html-css-js.com/images/banners/html-editor-online.jpg)Online HTML EditorFree online HTML editor with WYSIWYG and source composer and instant preview and many useful built-in features *html-online.com*](https://html-online.com/editor/)\n\n[![html css js cleaner](https://html-css-js.com/images/banners/html-cleaner.jpg)Web CleanerOnline HTML, CSS and JavaScript cleaner and code editors with syntax highlighting and customizable cleaning features. *html-cleaner.com*](https://html-cleaner.com/)\n\n[![word doc to html](https://html-css-js.com/images/banners/wordhtml.jpg)Word HTMLFree online Word and other rich text editor and HTML converter. Copy-paste your document in the editor and switch to HTML view to get the code. *wordhtml.com*](https://wordhtml.com/)\n\n[![html css js cheat sheet](https://html-css-js.com/images/banners/html-cheat-sheet.jpg)HTML Cheat SheetHTML, CSS, JavaScript and other web technology cheat sheet with interactive user interface. Grab the code you're looking for quickly. *htmlcheatsheet.com*](https://htmlcheatsheet.com/)\n\n[![stack overflow](https://html-css-js.com/images/banners/stackoverflow.jpg)Stack OverflowHuge programmer community where you usually don't have to ask for help because probably someone has already answered the same question. *stackoverflow.com*](https://stackoverflow.com/)\n\n[![w3schools](https://html-css-js.com/images/banners/w3schools.jpg)w3schoolsThe place to learn web technologies. There's a big chance that this site gives the first search result when you're looking for a HTML term. *w3schools.com*](https://www.w3schools.com/)\n\n[![Mozzilla Developer Network](https://html-css-js.com/images/banners/mdn.jpg)Mozzilla Developer NetworkAn evolving learning platform for web technologies. Providing tutorials, developer tools and the information to easily build projects. *developer.mozilla.org*](https://developer.mozilla.org/)\n\n[![w3c](https://html-css-js.com/images/banners/w3c.jpg)Markup ValidatorEnter the link of a webpage and the online tool will highlight the errors and warnings to fix in the source code. *validator.w3.org*](https://validator.w3.org/)\n\n[![github](https://html-css-js.com/images/banners/github.jpg)GitHubCollaborate with other developers. Fork, send pull requests and manage all your public and private git repositories. *github.com*](https://github.com/)\n\n[![bitbucket](https://html-css-js.com/images/banners/bitbucket.jpg)BitbucketWeb-based hosting service for development projects with version control system that makes it easy for you to collaborate with your team. *bitbucket.org*](https://bitbucket.org/)\n\n[![dribble](https://html-css-js.com/images/banners/dribble.jpg)DribbleTell others what are you working on! Dribbble is a community of designers sharing screenshots of their work, process, and projects. *dribbble.com*](https://dribbble.com/)\n\n[![builtwith](https://html-css-js.com/images/banners/builtwith.jpg)Built WithEnter a domain name to find out who is hosting it, what CMS and framework is used and many other insights. *builtwith.com*](https://builtwith.com/)\n\n[![html tidy](https://html-css-js.com/images/banners/html-tidy.jpg)HTML TidyAn online tool for checking and cleaning up HTML source files. Useful for finding and correcting errors in deeply nested HTML. *htmltidy.net*](https://htmltidy.net/)\n\n[![div table generator and converter](https://html-css-js.com/images/banners/div-table.jpg)Div TableCreate or convert tables to responsive div tags with a few clicks. Use the provided CSS code to render the divs as table cells. *divtable.com*](https://divtable.com/)\n\n[![bootstrap](https://html-css-js.com/images/banners/bootstrap.jpg)BootstrapThe most popular free and open-source HTML, CSS, and JS framework makes front-end development easier and faster. *getbootstrap.com*](https://getbootstrap.com/)\n\n[![professional html editor by htmlg](https://html-css-js.com/images/banners/htmlg.jpg)HTMLGProfessional HTML editor. The free version is enough to do magic with your markup. Tag and attribute manager filter etc. *htmlg.com*](https://htmlg.com/html-editor/)\n\n[![Facebook Developers](https://html-css-js.com/images/banners/facebook-developers.jpg)Facebook DevelopersDeveloper tools for login, share widget, analytics, monetization, messenger platform and more from the biggest social media site. *developers.facebook.com*](https://developers.facebook.com/)\n\n[![google mobile friendly test](https://html-css-js.com/images/banners/google-mobile-friendly.jpg)Google Mobile-Friendly TestCheck if Google considers your web page mobile-friendly and adjust the deficiencies if there is any. *google.com/mobile-friendly*](https://search.google.com/test/mobile-friendly)\n\n[![webpage speed test](https://html-css-js.com/images/banners/webpagetest.jpg)Webpage Speed TestAnalize the loading speed of a website from many available servers. The website creates a detailed analysis with screenshot and waterfall view. *webpagetest.org*](https://www.webpagetest.org/)\n\n[![netrenderer](https://html-css-js.com/images/banners/netrenderer.jpg)NetRendererRenders quickly a webpage with the selected version of the old Internet Explorer web browser. NetRenderer goes back to IE version 5.5. *netrenderer.com*](https://netrenderer.com/)\n\n[![browser shots](https://html-css-js.com/images/banners/browsershots.jpg)Browser ShotsCreate the screenshot of a webpage with many available browsers in various operating systems. *browsershots.org*](http://browsershots.org/)\n\n[![google speed insight](https://html-css-js.com/images/banners/speed-insight.jpg)PageSpeed InsightsThis tool by Google analyzes the submitted link from mobile and desktop to suggest you what to consider optimizing. *developers.google.com*](https://developers.google.com/speed/pagespeed/insights/)\n\n[![google fonts](https://html-css-js.com/images/banners/google-fonts.jpg)Google FontsAn interactive directory of over 800 free hosted web fonts. It allows to optimize loading speed by including only what you need. *fonts.google.com*](https://fonts.google.com/)\n\n[![font awesome](https://html-css-js.com/images/banners/font-awesome.jpg)Font AwesomeThe most popular icon set based on CSS and LESS. The vector icons can be customized as text -- size, color, drop shadow *fontawesome.io*](https://fontawesome.com/)\n\n[![rgb color code](https://html-css-js.com/images/banners/rgb-color-code.jpg)RGB Color CodesSearch and save color codes. Search by name or mix the RGB, HSV or CMYK values. Use the generated HTML/CSS codes. *rgbcolorcode.com*](https://rgbcolorcode.com/)\n\n[![freepic](https://html-css-js.com/images/banners/freepic.jpg)FreePicBrowse the large directory of free photos, vector arts, icons, illustrations, PSD files at FreePic. *freepik.com*](https://www.freepik.com/)\n\n[![placehold](https://html-css-js.com/images/banners/placeholdit.jpg)Placehold.it/Image placeholders with customizable size. Just add the image resolution after the domain name, for example placehold.it/400x250 *placehold.it*](https://placehold.it/)\n\n[![xml sitemaps](https://html-css-js.com/images/banners/xml-sitemaps.jpg)XML SitemapsGenerate XML sitemaps and URL list of a website. The crawl limit is 500 pages. *xml-sitemaps.com*](https://www.xml-sitemaps.com/)\n\n[![broken link check](https://html-css-js.com/images/banners/brokenlinkcheck.jpg)Broken Link CheckerCrawl a domain for dead links. Locates both internal and external links pointing to 404 error pages. *brokenlinkcheck.com*](http://www.brokenlinkcheck.com/)\n\n[![codepen](https://html-css-js.com/images/banners/codepen.jpg)CodepenRegister to create, save and share HTML-CSS-JS code snippets and run them online. *codepen.io*](https://codepen.io/)\n\n[![jsfiddle](https://html-css-js.com/images/banners/jsfiddle.jpg)JSFiddleSimilar to Codepen but this one doesn't require registration. Test HTML-CSS-JS code online and save your small project in a shareable URL. *jsfiddle.net*](https://jsfiddle.net/)\n\n[![wordpress](https://html-css-js.com/images/banners/wordpress.jpg)WordPress.OrgMore than 10 million websites use this free and open-source content management system based on PHP-MySql. *wordpress.org*](https://wordpress.org/)\n\n[![the blog starter](https://html-css-js.com/images/banners/blogstarter.jpg)Blog StarterA free guide that shows beginners how to start a blog using WordPress.org *theblogstarter.com*](https://www.theblogstarter.com/)\n\n[![website setup](https://html-css-js.com/images/banners/websitesetup.jpg)Website SetupA friendly guide about how to make a website, discussing the hosting, the CMS, domain name and promotion. *websitesetup.org*](https://websitesetup.org/)\n\n[![expireddomains](https://html-css-js.com/images/banners/expireddomains.jpg)Expired DomainsHunt for expired domain names or get inspiration for your next project. It's worth registering for an account on this free website. *expireddomains.net*](https://www.expireddomains.net/)\n\n[![badhtml](https://html-css-js.com/images/banners/badhtml.jpg)Bad HTMLThe ugliest website on the internet, collecting bad UI/UX practices. A deterrent example about how not to build a website. *badhtml.com*](https://badhtml.com/)\n\n[![1stwebdesigner](https://html-css-js.com/images/banners/1stwebdesign.jpg)1st Web DesignerFollow this web design blog to find out what's new in freelance, marketing, UX etc. categories. *1stwebdesigner.com*](https://1stwebdesigner.com/)\n",
            "contentLength": 9600,
            "isShared": true,
            "snippetFileOrder": 1,
            "createdAt": "2021-07-29T09:02:54Z",
            "updatedAt": "2021-07-29T09:02:54Z"
          }
        ]
      },
      {
        "id": 1060418,
        "guid": "a6119cd27f571b0c9b8c",
        "title": "backend-python-web-dev.md",
        "description": "backend-python-web-dev.md",
        "isPrivate": false,
        "createdAt": "2021-07-27T13:51:37Z",
        "updatedAt": "2021-07-27T13:53:39Z",
        "gistId": "27e5f00f49470cef6198819981b3dd6e",
        "gistboxId": null,
        "syncToGist": true,
        "gistUpdatedAt": null,
        "pagePermission": null,
        "starredBy": [],
        "createdBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "lastUpdatedBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "files": [
          {
            "id": 1565099,
            "guid": "c4479db7b4279d50b8c2",
            "filename": "backend-python-web-dev.md",
            "filetype": "markdown",
            "content": "",
            "contentLength": 431771,
            "isShared": true,
            "snippetFileOrder": 0,
            "createdAt": "2021-07-29T09:02:54Z",
            "updatedAt": "2021-07-29T09:02:54Z"
          }
        ]
      },
      {
        "id": 1060419,
        "guid": "3be8e9727f2cf754530d",
        "title": "Pure CSS 🌈 grid 🌊",
        "description": "Pure CSS 🌈 grid 🌊",
        "isPrivate": false,
        "createdAt": "2021-07-27T08:10:44Z",
        "updatedAt": "2021-07-27T08:10:45Z",
        "gistId": "e703fd3a0dec14add16ac436aeffd673",
        "gistboxId": null,
        "syncToGist": true,
        "gistUpdatedAt": null,
        "pagePermission": null,
        "starredBy": [],
        "createdBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "lastUpdatedBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "files": [
          {
            "id": 1565100,
            "guid": "ba28f79c9d0913aa3204",
            "filename": "index.pug",
            "filetype": "jade",
            "content": "- let n_rows = 8, n_cols = 21, n_dots = 7;\n- let m = n_rows*n_cols;\n\nstyle\n\t- for(let j = 0; j \u003c n_cols; j++)\n\t\t| .cell:nth-child(#{n_cols}n + #{j + 1}) { --i: #{j} }\n\t- for(let j = 0; j \u003c n_rows; j++)\n\t\t| .cell:nth-child(n + #{n_cols*j + 1}) { --j: #{j} }\n\t- for(let j = 0; j \u003c n_dots; j++)\n\t\t| .dot:nth-child(#{j + 1}) { --idx: #{j} }\n.grid(style=`--n-rows: ${n_rows}; --n-cols: ${n_cols}; --n-dots: ${n_dots}`)\n\t- for(let i = 0; i \u003c m; i++)\n\t\t.cell\n\t\t\t- for(let j = 0; j \u003c n_dots; j++)\n\t\t\t\t.dot",
            "contentLength": 497,
            "isShared": true,
            "snippetFileOrder": 0,
            "createdAt": "2021-07-29T09:02:54Z",
            "updatedAt": "2021-07-29T09:02:54Z"
          },
          {
            "id": 1565101,
            "guid": "3bb5457763a66472d277",
            "filename": "pure-css-grid.markdown",
            "filetype": "markdown",
            "content": "Pure CSS 🌈 grid 🌊\n-----------------\n[See me code this](https://youtu.be/Kh7JoL2hcQ8) in 15 minutes.\n\n---\n\nIf the work I've been putting out for the past 9 years (I started coming up with clever solutions to questions on Stack Overflow in the spring of 2012) has helped you in any way or you just like it and you wish me to be able to continue putting out stuff, please consider one of the following:\n\n* being a cool cat 😼🎩 and becoming a patron on Patreon\n\n[![become a patron button](https://c5.patreon.com/external/logo/become_a_patron_button.png)](https://www.patreon.com/anatudor)\n\n* making a one time donation via Ko-fi\n\n[![ko-fi](https://ko-fi.com/img/githubbutton_sm.svg)](https://ko-fi.com/C1C84CNNZ)\n\n* getting me something off my Amazon WishList \n\n[🎁 🇺🇸](https://www.amazon.com/gp/registry/wishlist/2Y3C4722GXH0I/) / [🎁 🇬🇧](https://www.amazon.co.uk/gp/registry/wishlist/2I25W7U0KADSR/)\n\n* or at least sharing this to show the rest of the world what can be done with CSS these days\n\nThank you!\n\n---\n\n[Inspiration](https://twitter.com/beesandbombs/status/1400544290011594755).\n\n---\n\nDedicated to the memory of someone dear who passed away in January 2019. Missing you every day.\n\nA [Pen](https://codepen.io/bgoonz/pen/ZEKrOwB) by [Bryan C Guner](https://codepen.io/bgoonz) on [CodePen](https://codepen.io).\n\n[License](https://codepen.io/bgoonz/pen/ZEKrOwB/license).",
            "contentLength": 1372,
            "isShared": true,
            "snippetFileOrder": 1,
            "createdAt": "2021-07-29T09:02:54Z",
            "updatedAt": "2021-07-29T09:02:54Z"
          },
          {
            "id": 1565102,
            "guid": "382a6c18b488535295a8",
            "filename": "scripts",
            "filetype": "text",
            "content": "\u003cscript src=\"https://codepen.io/thebabydino/pen/evPbxv.js\"\u003e\u003c/script\u003e\n",
            "contentLength": 69,
            "isShared": true,
            "snippetFileOrder": 2,
            "createdAt": "2021-07-29T09:02:55Z",
            "updatedAt": "2021-07-29T09:02:55Z"
          },
          {
            "id": 1565103,
            "guid": "56d0af126f997e1cc9f4",
            "filename": "style.scss",
            "filetype": "scss",
            "content": "$d: .5em;\n$r: .5*$d;\n$p: 5%;\n$t: 1s;\n\nbody, div { display: grid }\n\nbody { background: #262626 }\n\n.grid {\n\tgrid-gap: $d 2*$d;\n\tgrid-template: \n\t\trepeat(var(--n-rows), calc(var(--n-dots)*#{$d})) /\n\t\trepeat(var(--n-cols), $d);\n\tplace-self: center\n}\n\n.dot {\n\t--k: calc(var(--idx)/var(--n-dots));\n\t--mj: calc(.5*(var(--n-rows) - 1));\n\t--abs-j: max(var(--mj) - var(--j), var(--j) - var(--mj));\n\t--mi: calc(.5*(var(--n-cols) - 1));\n\t--abs-i: max(var(--mi) - var(--i), var(--i) - var(--mi));\n\tgrid-area: 1/ 1;\n\talign-self: start;\n\tpadding: $r;\n\tborder-radius: 50%;\n\tbackground: hsl(calc(var(--k)*360), 80%, 65%);\n\tmix-blend-mode: screen;\n\tanimation: osc $t ease-in-out infinite alternate;\n\tanimation-delay: \n\t\tcalc((var(--abs-j)/var(--mj) + \n\t\t\t\t\tvar(--abs-i)/var(--mi) + \n\t\t\t\t\tvar(--k) - 3)*#{$t})\n}\n\n@keyframes osc {\n\t0%, #{$p} { transform: none }\n\t#{100% - $p}, 100% { transform: translatey(calc((var(--n-dots) - 1)*#{$d})) }\n}",
            "contentLength": 922,
            "isShared": true,
            "snippetFileOrder": 3,
            "createdAt": "2021-07-29T09:02:55Z",
            "updatedAt": "2021-07-29T09:02:55Z"
          },
          {
            "id": 1565104,
            "guid": "331802d24b9db022a883",
            "filename": "styles",
            "filetype": "text",
            "content": "\u003clink href=\"https://codepen.io/thebabydino/pen/evPbxv.scss\" rel=\"stylesheet\" /\u003e\n",
            "contentLength": 80,
            "isShared": true,
            "snippetFileOrder": 4,
            "createdAt": "2021-07-29T09:02:55Z",
            "updatedAt": "2021-07-29T09:02:55Z"
          }
        ]
      },
      {
        "id": 1060420,
        "guid": "afd7c38bbe78eb09213d",
        "title": "Tessellation #2 (July 2021 #CodePenChallenge)",
        "description": "Tessellation #2 (July 2021 #CodePenChallenge)",
        "isPrivate": false,
        "createdAt": "2021-07-27T08:08:17Z",
        "updatedAt": "2021-07-27T08:08:17Z",
        "gistId": "ac6421742e653f48ea4c7fbb6fdb8113",
        "gistboxId": null,
        "syncToGist": true,
        "gistUpdatedAt": null,
        "pagePermission": null,
        "starredBy": [],
        "createdBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "lastUpdatedBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "files": [
          {
            "id": 1565105,
            "guid": "241684708d4f4ad713fa",
            "filename": "index.html",
            "filetype": "html",
            "content": "\u003cdiv class='wrapper'\u003e\n\t\u003cdiv class='example'\u003e\u003c/div\u003e\n\t\u003cdiv class='example'\u003e\u003c/div\u003e\n\t\u003cdiv class='example'\u003e\u003c/div\u003e\n\t\u003cdiv class='example'\u003e\u003c/div\u003e\n\t\u003cdiv class='example'\u003e\u003c/div\u003e\n\t\u003cdiv class='example'\u003e\u003c/div\u003e\n\t\u003cdiv class='example'\u003e\u003c/div\u003e\n\u003c/div\u003e",
            "contentLength": 231,
            "isShared": true,
            "snippetFileOrder": 0,
            "createdAt": "2021-07-29T09:02:55Z",
            "updatedAt": "2021-07-29T09:02:55Z"
          },
          {
            "id": 1565106,
            "guid": "207d80b8684c35af0359",
            "filename": "style.scss",
            "filetype": "scss",
            "content": "@use 'sass:math';\n\n$size: 3.75em;\n$line: 6px;\n\n* {\n\tbox-sizing: border-box;\n\tmargin: 0\n}\n\n.wrapper {\n\tdisplay: grid;\n\tgrid-gap: .5em;\n\tgrid-template-columns: \n\t\trepeat(auto-fit, min(100%, 25em));\n\tjustify-content: space-evenly;\n\tpadding: .5em\n}\n\n.example {\n\taspect-ratio: 1/ 1;\n\t\n\t\u0026:nth-child(1) {\n\t\tbackground: \n\t\t\trepeating-conic-gradient(\n\t\t\t\t\tyellow 0% 12.5%, \n\t\t\t\t\torange 0% 25%, \n\t\t\t\t\tred 0% 37.5%, \n\t\t\t\t\tblue 0% 50%) \n\t\t\t\t0/ #{$size $size}\n\t}\n\t\n\t\u0026:nth-child(2) {\n\t\tbackground: \n\t\t\trepeating-conic-gradient(from 45deg,\n\t\t\t\t\tyellow 0% 12.5%, \n\t\t\t\t\tblue 0% 25%, \n\t\t\t\t\torange 0% 50%) \n\t\t\t\t0/ #{$size $size}\n\t}\n\t\n\t\u0026:nth-child(3) {\n\t\tbackground: \n\t\t\trepeating-conic-gradient(from 45deg, \n\t\t\t\t\t#000 0% 25%, \n\t\t\t\t\t#fff 0% 50%) \n\t\t\t\t0/ #{$size $size}\n\t}\n\t\n\t\u0026:nth-child(4) {\n\t\tbackground: \n\t\t\trepeating-conic-gradient(\n\t\t\t\t\t#000 0% 25%, \n\t\t\t\t\t#fff 0% 50%) \n\t\t\t\t0/ #{$size $size}\n\t}\n\t\n\t\u0026:nth-child(5) {\n\t\t$size: 6em;\n\t\t--circ: \n\t\t\tradial-gradient(\n\t\t\t\tyellow calc(10% - 1px), \n\t\t\t\torange 10% 20%, \n\t\t\t\ttransparent calc(20% + 1px));\n\t\tbackground: \n\t\t\tvar(--circ), \n\t\t\tvar(--circ) .5*$size .5*$size, \n\t\t\trepeating-conic-gradient(from 45deg, \n\t\t\t\t\tyellow 0% 25%, \n\t\t\t\t\torange 0% 50%);\n\t\tbackground-size: $size $size\n\t}\n\t\n\t\u0026:nth-child(6) {\n\t\t$size: 3.75em;\n\t\t--list: \n\t\t\torange 25%, transparent 0%;\n\t\tbackground: \n\t\t\tconic-gradient(from 45deg at 62.5%, \n\t\t\t\t\tvar(--list)), \n\t\t\tconic-gradient(from 225deg at 37.5%, \n\t\t\t\t\tvar(--list)), \n\t\t\tconic-gradient(\n\t\t\t\t\tat #{$line} calc(100% - #{$line}), \n\t\t\t\t\tgold 25%, \n\t\t\t\t\torange 0%) \n\t\t\t\t-.5*$line calc(#{.5*$size} + #{.5*$line});\n\t\tbackground-size: $size $size\n\t}\n\t\n\t\u0026:nth-child(7) {\n\t\t$size: 5em;\n\t\t$edge: .5*$size;\n\t\t$diag: $edge*math.sqrt(3);\n\t\t$line: 4px;\n\t\t$b: .5*$line/math.tan(60deg);\n\t\t\n\t\t--list: gold 120deg, transparent 0%;\n\t\t--cap0: \n\t\t\tconic-gradient(from 120deg at 50% calc(100% + #{$b} - #{.5*$edge}), \n\t\t\t\t\tvar(--list));\n\t\t--cap1: \n\t\t\tconic-gradient(from -60deg at 50% calc(#{.5*$edge} - #{$b}), \n\t\t\t\t\tvar(--list));\n\t\t--midd: \n\t\t\tconic-gradient(at #{$line} calc(#{$edge} - #{2*$b} + 1px), \n\t\t\t\t\tgold 25%, \n\t\t\t\t\ttransparent 0%);\n\t\tbackground:\n\t\t\tvar(--cap0) 0 #{$b}, \n\t\t\tvar(--cap0) .5*$diag calc(#{1.5*$edge} + #{$b}), \n\t\t\tvar(--cap1) 0 calc(-#{$b} - #{2*$edge}), \n\t\t\tvar(--cap1) .5*$diag calc(#{-.5*$edge} - #{$b}), \n\t\t\tvar(--midd) #{-.5*$line} calc(#{$b} - .5px), \n\t\t\tvar(--midd) calc(.5*(#{$diag} - #{$line})) calc(#{1.5*$edge} + #{$b} - .5px)\n\t\t\t#282828;\n\t\tbackground-size: $diag 1.5*$size\n\t}\n}",
            "contentLength": 2450,
            "isShared": true,
            "snippetFileOrder": 1,
            "createdAt": "2021-07-29T09:02:55Z",
            "updatedAt": "2021-07-29T09:02:55Z"
          },
          {
            "id": 1565107,
            "guid": "7bf25aa0b3d32be787ec",
            "filename": "tessellation-2-july-2021-codepenchallenge.markdown",
            "filetype": "markdown",
            "content": "Tessellation #2 (July 2021 #CodePenChallenge)\n---------------------------------------------\n\n\nA [Pen](https://codepen.io/bgoonz/pen/xxdYOQX) by [Bryan C Guner](https://codepen.io/bgoonz) on [CodePen](https://codepen.io).\n\n[License](https://codepen.io/bgoonz/pen/xxdYOQX/license).",
            "contentLength": 279,
            "isShared": true,
            "snippetFileOrder": 2,
            "createdAt": "2021-07-29T09:02:55Z",
            "updatedAt": "2021-07-29T09:02:55Z"
          }
        ]
      },
      {
        "id": 1060421,
        "guid": "eddc19fc4b332002e375",
        "title": "bookmarks",
        "description": "bookmarks",
        "isPrivate": false,
        "createdAt": "2021-07-26T22:16:43Z",
        "updatedAt": "2021-07-26T22:16:44Z",
        "gistId": "ad5c9944f383f1ed07239b672d87c69c",
        "gistboxId": null,
        "syncToGist": true,
        "gistUpdatedAt": null,
        "pagePermission": null,
        "starredBy": [],
        "createdBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "lastUpdatedBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "files": [
          {
            "id": 1565108,
            "guid": "3e508240c6250ae08eb2",
            "filename": "bookmarks.md",
            "filetype": "markdown",
            "content": "",
            "contentLength": 346127,
            "isShared": true,
            "snippetFileOrder": 0,
            "createdAt": "2021-07-29T09:02:55Z",
            "updatedAt": "2021-07-29T09:02:55Z"
          }
        ]
      },
      {
        "id": 1060422,
        "guid": "aaabd7882ee0e9fb8399",
        "title": "render markdown and html",
        "description": "render markdown and html",
        "isPrivate": false,
        "createdAt": "2021-07-26T19:45:00Z",
        "updatedAt": "2021-07-26T19:45:00Z",
        "gistId": "f5b2c5a754e42bec8cb641aab4a4f4be",
        "gistboxId": null,
        "syncToGist": true,
        "gistUpdatedAt": null,
        "pagePermission": null,
        "starredBy": [],
        "createdBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "lastUpdatedBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "files": [
          {
            "id": 1565109,
            "guid": "23b2717a5d26c3619fd5",
            "filename": "markdown-renderer.html",
            "filetype": "html",
            "content": "\u003c!doctype html\u003e\n\u003chtml\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"UTF-8\"\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width, height=device-height, user-scalable=no, initial-scale=1.0\"/\u003e\n        \u003ctitle\u003eSteem-content-renderer live demo\u003c/title\u003e\n        \u003cstyle\u003e\n            /* source: https://github.com/setetres/evenbettermotherfuckingwebsite */\n            body {margin: 5% auto; padding: 0 3rem; background: #f2f2f2; color: #444444; font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif; font-size: 16px; line-height: 1.8; text-shadow: 0 1px 0 #ffffff; max-width: 800px;}\n            code {background: white;}\n            a {border-bottom: 1px solid #444444; color: #444444; text-decoration: none;}\n            a:hover {border-bottom: 0;}\n            /**/\n            h1 { font-size: 2.2em; }\n            h2, h3, h4, h5 { margin-bottom: 0; }\n            #output {\n                border: 1px solid #777;\n                padding: 0.5rem;\n            }\n            #output-markup {\n                width: 100%;\n                padding: 0.5rem;\n                background: #eee;\n                border: 1px solid #777;\n                overflow-x: scroll;\n            }\n            #render-button-container {\n                text-align: center;\n            }\n            #render-button {\n                padding: 0.5rem;\n                font-size: 1.2em;\n                border-radius: 0.5rem 0.5rem;\n            }\n            .load-post-form {\n                text-align: right;\n            }\n            header small {\n                color: #999;\n                font-size: 50%;\n            }\n            img {\n                max-width: 100%;\n            }\n        \u003c/style\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003cheader\u003e\n            \u003ch1\u003eSteem-content-renderer \u003csmall\u003eexample\u003c/small\u003e\u003c/h1\u003e\n            \u003caside\u003e\n                Steem-content-renderer is aimed at unifying post rendering across all Steem interfaces.\n                The rendering code was extracted from \n                \u003ca href=\"https://github.com/steemit/condenser\"\u003econdenser by Steemit\u003c/a\u003e, refactored, tested\n                and bundled into a standalone library. This approach allows independedt development and \n                continous improvement of post rendering in Steem blockchain. As for now it is fully compatible\n                with the Steemit way of rendering posts. See \n                the \u003ca href=\"https://github.com/wise-team/steem-content-renderer\"\u003erepository\u003c/a\u003e, integrate into your project,\n                star, make pull requests and create issues. Let's make the project alive!\n                \u003chr /\u003e\n                This example uses some markdown and transforms it to html. The library is loaded from the\n                unpkg CDN: \u003cem\u003e\u003ca href=\"https://unpkg.com/steem-content-renderer\"\u003ehttps://unpkg.com/steem-content-renderer\u003c/a\u003e\u003c/em\u003e.\n            \u003c/aside\u003e\n        \u003c/header\u003e\n\n        \u003ch2\u003eRender markdown:\u003c/h2\u003e\n        \u003cdiv class=\"load-post-form\"\u003e\n            Link to post (busy or steemit): \u003cinput type=\"text\" id=\"post-link-input\"\u003e\n            \u003cbutton id=\"load-post-button\"\u003eLoad steem post\u003c/button\u003e\u003c/div\u003e\n        \u003ctextarea rows=\"12\" style=\"width: 100%;\" id=\"input\"\u003e\n# Sample post\nand some content.\n\nLet's mention @ned\nor include a tag #steem. \n\nhttps://youtu.be/B7C83L6iWJQ\n\n        \u003c/textarea\u003e\n        \u003cp id=\"render-button-container\"\u003e\u003cbutton id=\"render-button\"\u003eRender markdown\u003c/button\u003e\u003c/p\u003e\n\n        \u003ch2\u003eOutput:\u003c/h2\u003e\n        \u003cp id=\"output\"\u003e\n            ...press the button...\n        \u003c/p\u003e\n        \u003cbr /\u003e\n\n        \u003ch2\u003eGenerated HTML markup\u003c/h2\u003e\n        \u003cpre id=\"output-markup\"\u003e\n            ...press the button...\n        \u003c/pre\u003e\n        \n        \u003cscript src=\"https://cdn.steemjs.com/lib/latest/steem.min.js\"\u003e\u003c/script\u003e\n        \u003cscript src=\"https://unpkg.com/jquery\"\u003e\u003c/script\u003e\n        \u003cscript src=\"https://unpkg.com/steem-content-renderer@latest\"\u003e\u003c/script\u003e\n        \u003c!--\u003cscript src=\"../dist/browser/steem-content-renderer.min.js\"\u003e\u003c/script\u003e--\u003e\n        \u003cscript\u003e\n            const renderer = new SteemContentRenderer.DefaultRenderer({\n                baseUrl: \"https://steemit.com/\",\n                breaks: true,\n                skipSanitization: false,\n                allowInsecureScriptTags: false,\n                addNofollowToLinks: true,\n                doNotShowImages: false,\n                ipfsPrefix: \"\",\n                assetsWidth: 640,\n                assetsHeight: 480,\n                imageProxyFn: (url) =\u003e url,\n                usertagUrlFn: (account) =\u003e \"https://steemit.com/@\" + account,\n                hashtagUrlFn: (hashtag) =\u003e \"https://steemit.com/trending/\" + hashtag,\n                isLinkSafeFn: (url) =\u003e true,\n            });\n\n            $(document).ready(() =\u003e {\n                const renderMarkdownBtnElem = $(\"#render-button\");\n                const inputElem = $(\"#input\");\n                const outputElem = $(\"#output\");\n                const outputMarkupElem = $(\"#output-markup\");\n                const loadPostButton = $(\"#load-post-button\");\n                const postLinkInput = $(\"#post-link-input\");\n\n                function setOutput(output) {\n                    outputElem.html(output);\n                    outputMarkupElem.text(output);\n                }\n\n                function render() {\n                    const input = inputElem.val();\n                    const output = renderer.render(input);\n                    \n                    console.log(\"Rendered\", output);\n                    setOutput(output);\n                }\n\n                function getAuthorAndPermlinkFromLink(link) {\n                    let author = \"\";\n                    let permlink = \"\";\n                    if (link.length \u003e 0) {\n                        /* tslint:disable max-line-length */\n                        const regex = /^\\/?(?:https?:\\/\\/(?:steemit\\.com|busy\\.org))?(?:\\/?[^\\/\\n]*\\/)?@?([^\\/\\n]+)\\/([^\\/\\n]+)$/giu;\n                        /* tslint:disable max-line-length */\n                        const match = regex.exec(link);\n                        if (match \u0026\u0026 match.length \u003e 1) {\n                            author = match[1];\n                            permlink = match[2];\n                        }\n                    }\n                    return { author, permlink };\n                }\n\n                renderMarkdownBtnElem.on(\"click\", () =\u003e render());\n\n                loadPostButton.on(\"click\", () =\u003e {\n                    const postLink = postLinkInput.val();\n                    const { author, permlink } = getAuthorAndPermlinkFromLink(postLink);\n                    if (!author || author.length === 0 || !permlink || permlink.length === 0) {\n                        inputElem.text(\"Author or permlink is missing...\");\n                        return;\n                    }\n\n                    inputElem.text(\"Loading post @\" + author + \"/\" + permlink + \" ...\");\n                    (async () =\u003e {\n                        try {\n                            const post = await steem.api.getContentAsync(author, permlink);\n                            const postMarkdown = post.body;\n                            console.log(\"Content loaded\", postMarkdown);\n                            inputElem.text(postMarkdown);\n                            render();\n                        }\n                        catch (error) {\n                            inputElem.text(\"Error while loading post @\" + author + \"/\" + permlink + \": \" + error);\n                        }\n                    })();\n\n                });\n            });\n        \u003c/script\u003e\n    \u003c/body\u003e\n\u003c/html\u003e",
            "contentLength": 7541,
            "isShared": true,
            "snippetFileOrder": 0,
            "createdAt": "2021-07-29T09:02:55Z",
            "updatedAt": "2021-07-29T09:02:55Z"
          }
        ]
      },
      {
        "id": 1060423,
        "guid": "864bb53fecde3e9102a8",
        "title": "dirhtml.py",
        "description": "dirhtml.py",
        "isPrivate": false,
        "createdAt": "2021-07-26T18:59:54Z",
        "updatedAt": "2021-07-26T18:59:54Z",
        "gistId": "170f24b84b98bf3dce965715fb23d9df",
        "gistboxId": null,
        "syncToGist": true,
        "gistUpdatedAt": null,
        "pagePermission": null,
        "starredBy": [],
        "createdBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "lastUpdatedBy": {
          "id": 45455,
          "name": "Bryan C Guner",
          "email": "bryan.guner@gmail.com",
          "image": "https://avatars.githubusercontent.com/u/66654881?v=4",
          "nickname": "bgoonz"
        },
        "files": [
          {
            "id": 1565110,
            "guid": "4babde4f66c7c1be3c7b",
            "filename": "dirhtml.py",
            "filetype": "python",
            "content": "#!/usr/bin/env python3\n# ---\n\n# -handle symlinked files and folders: displayed with custom icons\n\n# By default only the current folder is processed.\n\n# Use -r or --recursive to process nested folders.\n\nimport argparse\nimport datetime\nimport os\nimport sys\nfrom pathlib import Path\nfrom urllib.parse import quote\n\nDEFAULT_OUTPUT_FILE = 'index.html'\n\n\ndef process_dir(top_dir, opts):\n    glob_patt = opts.filter or '*'\n\n    path_top_dir: Path\n    path_top_dir = Path(top_dir)\n    index_file = None\n\n    index_path = Path(path_top_dir, opts.output_file)\n\n    if opts.verbose:\n        print(f'Traversing dir {path_top_dir.absolute()}')\n\n    try:\n        index_file = open(index_path, 'w')\n    except Exception as e:\n        print('cannot create file %s %s' % (index_path, e))\n        return\n\n    index_file.write(\"\"\"\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"utf-8\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n    \u003cstyle\u003e\n    * { padding: 0; margin: 0; }\n    body {\n        font-family: sans-serif;\n        text-rendering: optimizespeed;\n        background-color: #ffffff;\n    }\n    a {\n        color: #006ed3;\n        text-decoration: none;\n    }\n    a:hover,\n    h1 a:hover {\n        color: #319cff;\n    }\n    header,\n    #summary {\n        padding-left: 5%;\n        padding-right: 5%;\n    }\n    th:first-child,\n    td:first-child {\n        width: 5%;\n    }\n    th:last-child,\n    td:last-child {\n        width: 5%;\n    }\n    header {\n        padding-top: 25px;\n        padding-bottom: 15px;\n        background-color: #f2f2f2;\n    }\n    h1 {\n        font-size: 20px;\n        font-weight: normal;\n        white-space: nowrap;\n        overflow-x: hidden;\n        text-overflow: ellipsis;\n        color: #999;\n    }\n    h1 a {\n        color: #000;\n        margin: 0 4px;\n    }\n    h1 a:hover {\n        text-decoration: underline;\n    }\n    h1 a:first-child {\n        margin: 0;\n    }\n    main {\n        display: block;\n    }\n    .meta {\n        font-size: 12px;\n        font-family: Verdana, sans-serif;\n        border-bottom: 1px solid #9C9C9C;\n        padding-top: 10px;\n        padding-bottom: 10px;\n    }\n    .meta-item {\n        margin-right: 1em;\n    }\n    #filter {\n        padding: 4px;\n        border: 1px solid #CCC;\n    }\n    table {\n        width: 100%;\n        border-collapse: collapse;\n    }\n    tr {\n        border-bottom: 1px dashed #dadada;\n    }\n    tbody tr:hover {\n        background-color: #ffffec;\n    }\n    th,\n    td {\n        text-align: left;\n        padding: 10px 0;\n    }\n    th {\n        padding-top: 15px;\n        padding-bottom: 15px;\n        font-size: 16px;\n        white-space: nowrap;\n    }\n    th a {\n        color: black;\n    }\n    th svg {\n        vertical-align: middle;\n    }\n    td {\n        white-space: nowrap;\n        font-size: 14px;\n    }\n    td:nth-child(2) {\n        width: 80%;\n    }\n    td:nth-child(3) {\n        padding: 0 20px 0 20px;\n    }\n    th:nth-child(4),\n    td:nth-child(4) {\n        text-align: right;\n    }\n    td:nth-child(2) svg {\n        position: absolute;\n    }\n    td .name {\n        margin-left: 1.75em;\n        word-break: break-all;\n        overflow-wrap: break-word;\n        white-space: pre-wrap;\n    }\n    td .goup {\n        margin-left: 1.75em;\n        padding: 0;\n        word-break: break-all;\n        overflow-wrap: break-word;\n        white-space: pre-wrap;\n    }\n    .icon {\n        margin-right: 5px;\n    }\n    tr.clickable { \n        cursor: pointer; \n    } \n    tr.clickable a { \n        display: block; \n    } \n    @media (max-width: 600px) {\n        * {\n            font-size: 1.06rem;\n        }\n        .hideable {\n            display: none;\n        }\n        td:nth-child(2) {\n            width: auto;\n        }\n        th:nth-child(3),\n        td:nth-child(3) {\n            padding-right: 5%;\n            text-align: right;\n        }\n        h1 {\n            color: #000;\n        }\n        h1 a {\n            margin: 0;\n        }\n        #filter {\n            max-width: 100px;\n        }\n    }\n    \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n    \u003csvg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"0\" width=\"0\" style=\"position: absolute;\"\u003e\n    \u003cdefs\u003e\n        \u003c!-- Go-up --\u003e\n        \u003cg id=\"go-up\"\u003e\n            \u003cpath d=\"M10,9V5L3,12L10,19V14.9C15,14.9 18.5,16.5 21,20C20,15 17,10 10,9Z\" fill=\"#696969\"/\u003e\n        \u003c/g\u003e\n        \u003c!-- Folder --\u003e\n        \u003cg id=\"folder\" fill-rule=\"nonzero\" fill=\"none\"\u003e\n            \u003cpath d=\"M285.22 37.55h-142.6L110.9 0H31.7C14.25 0 0 16.9 0 37.55v75.1h316.92V75.1c0-20.65-14.26-37.55-31.7-37.55z\" fill=\"#FFA000\"/\u003e\n            \u003cpath d=\"M285.22 36H31.7C14.25 36 0 50.28 0 67.74v158.7c0 17.47 14.26 31.75 31.7 31.75H285.2c17.44 0 31.7-14.3 31.7-31.75V67.75c0-17.47-14.26-31.75-31.7-31.75z\" fill=\"#FFCA28\"/\u003e\n        \u003c/g\u003e\n        \u003cg id=\"folder-shortcut\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"\u003e\n            \u003cg id=\"folder-shortcut-group\" fill-rule=\"nonzero\"\u003e\n                \u003cg id=\"folder-shortcut-shape\"\u003e\n                    \u003cpath d=\"M285.224876,37.5486902 L142.612438,37.5486902 L110.920785,0 L31.6916529,0 C14.2612438,0 0,16.8969106 0,37.5486902 L0,112.646071 L316.916529,112.646071 L316.916529,75.0973805 C316.916529,54.4456008 302.655285,37.5486902 285.224876,37.5486902 Z\" id=\"Shape\" fill=\"#FFA000\"\u003e\u003c/path\u003e\n                    \u003cpath d=\"M285.224876,36 L31.6916529,36 C14.2612438,36 0,50.2838568 0,67.7419039 L0,226.451424 C0,243.909471 14.2612438,258.193328 31.6916529,258.193328 L285.224876,258.193328 C302.655285,258.193328 316.916529,243.909471 316.916529,226.451424 L316.916529,67.7419039 C316.916529,50.2838568 302.655285,36 285.224876,36 Z\" id=\"Shape\" fill=\"#FFCA28\"\u003e\u003c/path\u003e\n                \u003c/g\u003e\n                \u003cpath d=\"M126.154134,250.559184 C126.850974,251.883673 127.300549,253.006122 127.772602,254.106122 C128.469442,255.206122 128.919016,256.104082 129.638335,257.002041 C130.559962,258.326531 131.728855,259 133.100057,259 C134.493737,259 135.415364,258.55102 136.112204,257.67551 C136.809044,257.002041 137.258619,255.902041 137.258619,254.577551 C137.258619,253.904082 137.258619,252.804082 137.033832,251.457143 C136.786566,249.908163 136.561779,249.032653 136.561779,248.583673 C136.089726,242.814286 135.864939,237.920408 135.864939,233.273469 C135.864939,225.057143 136.786566,217.514286 138.180246,210.846939 C139.798713,204.202041 141.889234,198.634694 144.429328,193.763265 C147.216689,188.869388 150.678411,184.873469 154.836973,181.326531 C158.995535,177.779592 163.626149,174.883673 168.481552,172.661224 C173.336954,170.438776 179.113983,168.665306 185.587852,167.340816 C192.061722,166.218367 198.760378,165.342857 205.481514,164.669388 C212.18017,164.220408 219.598146,163.995918 228.162535,163.995918 L246.055591,163.995918 L246.055591,195.514286 C246.055591,197.736735 246.752431,199.510204 248.370899,201.059184 C250.214153,202.608163 252.079886,203.506122 254.372715,203.506122 C256.463236,203.506122 258.531277,202.608163 260.172223,201.059184 L326.102289,137.797959 C327.720757,136.24898 328.642384,134.47551 328.642384,132.253061 C328.642384,130.030612 327.720757,128.257143 326.102289,126.708163 L260.172223,63.4469388 C258.553756,61.8979592 256.463236,61 254.395194,61 C252.079886,61 250.236632,61.8979592 248.393377,63.4469388 C246.77491,64.9959184 246.07807,66.7693878 246.07807,68.9918367 L246.07807,100.510204 L228.162535,100.510204 C166.863084,100.510204 129.166282,117.167347 115.274437,150.459184 C110.666301,161.54898 108.350993,175.310204 108.350993,191.742857 C108.350993,205.279592 113.903236,223.912245 124.760454,247.438776 C125.00772,248.112245 125.457294,249.010204 126.154134,250.559184 Z\" id=\"Shape\" fill=\"#FFFFFF\" transform=\"translate(218.496689, 160.000000) scale(-1, 1) translate(-218.496689, -160.000000) \"\u003e\u003c/path\u003e\n            \u003c/g\u003e\n        \u003c/g\u003e\n        \u003c!-- File --\u003e\n        \u003cg id=\"file\" stroke=\"#000\" stroke-width=\"25\" fill=\"#FFF\" fill-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\u003e\n            \u003cpath d=\"M13 24.12v274.76c0 6.16 5.87 11.12 13.17 11.12H239c7.3 0 13.17-4.96 13.17-11.12V136.15S132.6 13 128.37 13H26.17C18.87 13 13 17.96 13 24.12z\"/\u003e\n            \u003cpath d=\"M129.37 13L129 113.9c0 10.58 7.26 19.1 16.27 19.1H249L129.37 13z\"/\u003e\n        \u003c/g\u003e\n        \u003cg id=\"file-shortcut\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"\u003e\n            \u003cg id=\"file-shortcut-group\" transform=\"translate(13.000000, 13.000000)\"\u003e\n                \u003cg id=\"file-shortcut-shape\" stroke=\"#000000\" stroke-width=\"25\" fill=\"#FFFFFF\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\u003e\n                    \u003cpath d=\"M0,11.1214886 L0,285.878477 C0,292.039924 5.87498876,296.999983 13.1728373,296.999983 L225.997983,296.999983 C233.295974,296.999983 239.17082,292.039942 239.17082,285.878477 L239.17082,123.145388 C239.17082,123.145388 119.58541,2.84217094e-14 115.369423,2.84217094e-14 L13.1728576,2.84217094e-14 C5.87500907,-1.71479982e-05 0,4.96022995 0,11.1214886 Z\" id=\"rect1171\"\u003e\u003c/path\u003e\n                    \u003cpath d=\"M116.37005,0 L116,100.904964 C116,111.483663 123.258008,120 132.273377,120 L236,120 L116.37005,0 L116.37005,0 Z\" id=\"rect1794\"\u003e\u003c/path\u003e\n                \u003c/g\u003e\n                \u003cpath d=\"M47.803141,294.093878 C48.4999811,295.177551 48.9495553,296.095918 49.4216083,296.995918 C50.1184484,297.895918 50.5680227,298.630612 51.2873415,299.365306 C52.2089688,300.44898 53.3778619,301 54.7490634,301 C56.1427436,301 57.0643709,300.632653 57.761211,299.916327 C58.4580511,299.365306 58.9076254,298.465306 58.9076254,297.381633 C58.9076254,296.830612 58.9076254,295.930612 58.6828382,294.828571 C58.4355724,293.561224 58.2107852,292.844898 58.2107852,292.477551 C57.7387323,287.757143 57.5139451,283.753061 57.5139451,279.95102 C57.5139451,273.228571 58.4355724,267.057143 59.8292526,261.602041 C61.44772,256.165306 63.5382403,251.610204 66.0783349,247.62449 C68.8656954,243.620408 72.3274172,240.35102 76.4859792,237.44898 C80.6445412,234.546939 85.2751561,232.177551 90.1305582,230.359184 C94.9859603,228.540816 100.76299,227.089796 107.236859,226.006122 C113.710728,225.087755 120.409385,224.371429 127.13052,223.820408 C133.829177,223.453061 141.247152,223.269388 149.811542,223.269388 L167.704598,223.269388 L167.704598,249.057143 C167.704598,250.87551 168.401438,252.326531 170.019905,253.593878 C171.86316,254.861224 173.728893,255.595918 176.021722,255.595918 C178.112242,255.595918 180.180284,254.861224 181.82123,253.593878 L247.751296,201.834694 C249.369763,200.567347 250.291391,199.116327 250.291391,197.297959 C250.291391,195.479592 249.369763,194.028571 247.751296,192.761224 L181.82123,141.002041 C180.202763,139.734694 178.112242,139 176.044201,139 C173.728893,139 171.885639,139.734694 170.042384,141.002041 C168.423917,142.269388 167.727077,143.720408 167.727077,145.538776 L167.727077,171.326531 L149.811542,171.326531 C88.5120908,171.326531 50.8152886,184.955102 36.9234437,212.193878 C32.3153075,221.267347 30,232.526531 30,245.971429 C30,257.046939 35.5522422,272.291837 46.4094607,291.540816 C46.6567266,292.091837 47.1063009,292.826531 47.803141,294.093878 Z\" id=\"Shape-Copy\" fill=\"#000000\" fill-rule=\"nonzero\" transform=\"translate(140.145695, 220.000000) scale(-1, 1) translate(-140.145695, -220.000000) \"\u003e\u003c/path\u003e\n            \u003c/g\u003e\n        \u003c/g\u003e\n    \u003c/defs\u003e\n    \u003c/svg\u003e\n\u003cheader\u003e\n    \u003ch1\u003e\"\"\"\n                     f'{path_top_dir.name}'\n                     \"\"\"\u003c/h1\u003e\n                 \u003c/header\u003e\n                 \u003cmain\u003e\n                 \u003cdiv class=\"listing\"\u003e\n                     \u003ctable aria-describedby=\"summary\"\u003e\n                         \u003cthead\u003e\n                         \u003ctr\u003e\n                             \u003cth\u003e\u003c/th\u003e\n                             \u003cth\u003eName\u003c/th\u003e\n                             \u003cth\u003eSize\u003c/th\u003e\n                             \u003cth class=\"hideable\"\u003e\n                                 Modified\n                             \u003c/th\u003e\n                             \u003cth class=\"hideable\"\u003e\u003c/th\u003e\n                         \u003c/tr\u003e\n                         \u003c/thead\u003e\n                         \u003ctbody\u003e\n                         \u003ctr class=\"clickable\"\u003e\n                             \u003ctd\u003e\u003c/td\u003e\n                             \u003ctd\u003e\u003ca href=\"..\"\u003e\u003csvg width=\"1.5em\" height=\"1em\" version=\"1.1\" viewBox=\"0 0 24 24\"\u003e\u003cuse xlink:href=\"#go-up\"\u003e\u003c/use\u003e\u003c/svg\u003e\n                 \u003cspan class=\"goup\"\u003e..\u003c/span\u003e\u003c/a\u003e\u003c/td\u003e\n                             \u003ctd\u003e\u0026mdash;\u003c/td\u003e\n                             \u003ctd class=\"hideable\"\u003e\u0026mdash;\u003c/td\u003e\n                             \u003ctd class=\"hideable\"\u003e\u003c/td\u003e\n                         \u003c/tr\u003e\n                 \"\"\")\n\n    # sort dirs first\n    sorted_entries = sorted(path_top_dir.glob(glob_patt), key=lambda p: (p.is_file(), p.name))\n\n    entry: Path\n    for entry in sorted_entries:\n\n        # don't include index.html in the file listing\n        if entry.name.lower() == opts.output_file.lower():\n            continue\n\n        if entry.is_dir() and opts.recursive:\n            process_dir(entry, opts)\n\n        # From Python 3.6, os.access() accepts path-like objects\n        if (not entry.is_symlink()) and not os.access(str(entry), os.W_OK):\n            print(f\"*** WARNING *** entry {entry.absolute()} is not writable! SKIPPING!\")\n            continue\n        if opts.verbose:\n            print(f'{entry.absolute()}')\n\n        size_bytes = -1  ## is a folder\n        size_pretty = '\u0026mdash;'\n        last_modified = '-'\n        last_modified_human_readable = '-'\n        last_modified_iso = ''\n        try:\n            if entry.is_file():\n                size_bytes = entry.stat().st_size\n                size_pretty = pretty_size(size_bytes)\n\n            if entry.is_dir() or entry.is_file():\n                last_modified = datetime.datetime.fromtimestamp(entry.stat().st_mtime).replace(microsecond=0)\n                last_modified_iso = last_modified.isoformat()\n                last_modified_human_readable = last_modified.strftime(\"%c\")\n\n        except Exception as e:\n            print('ERROR accessing file name:', e, entry)\n            continue\n\n        entry_path = str(entry.name)\n\n        if entry.is_dir() and not entry.is_symlink():\n            entry_type = 'folder'\n            if os.name not in ('nt',):\n                # append trailing slash to dirs, unless it's windows\n                entry_path = os.path.join(entry.name, '')\n\n        elif entry.is_dir() and entry.is_symlink():\n            entry_type = 'folder-shortcut'\n            print('dir-symlink', entry.absolute())\n\n        elif entry.is_file() and entry.is_symlink():\n            entry_type = 'file-shortcut'\n            print('file-symlink', entry.absolute())\n\n        else:\n            entry_type = 'file'\n\n        index_file.write(f\"\"\"\n        \u003ctr class=\"file\"\u003e\n            \u003ctd\u003e\u003c/td\u003e\n            \u003ctd\u003e\n                \u003ca href=\"{quote(entry_path)}\"\u003e\n                    \u003csvg width=\"1.5em\" height=\"1em\" version=\"1.1\" viewBox=\"0 0 265 323\"\u003e\u003cuse xlink:href=\"#{entry_type}\"\u003e\u003c/use\u003e\u003c/svg\u003e\n                    \u003cspan class=\"name\"\u003e{entry.name}\u003c/span\u003e\n                \u003c/a\u003e\n            \u003c/td\u003e\n            \u003ctd data-order=\"{size_bytes}\"\u003e{size_pretty}\u003c/td\u003e\n            \u003ctd class=\"hideable\"\u003e\u003ctime datetime=\"{last_modified_iso}\"\u003e{last_modified_human_readable}\u003c/time\u003e\u003c/td\u003e\n            \u003ctd class=\"hideable\"\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n\"\"\")\n\n    index_file.write(\"\"\"\n            \u003c/tbody\u003e\n        \u003c/table\u003e\n    \u003c/div\u003e\n\u003c/main\u003e\n\u003c/body\u003e\n\u003c/html\u003e\"\"\")\n    if index_file:\n        index_file.close()\n\n\n# bytes pretty-printing\nUNITS_MAPPING = [\n    (1024 ** 5, ' PB'),\n    (1024 ** 4, ' TB'),\n    (1024 ** 3, ' GB'),\n    (1024 ** 2, ' MB'),\n    (1024 ** 1, ' KB'),\n    (1024 ** 0, (' byte', ' bytes')),\n]\n\n\ndef pretty_size(bytes, units=UNITS_MAPPING):\n    \"\"\"Human-readable file sizes.\n    ripped from https://pypi.python.org/pypi/hurry.filesize/\n    \"\"\"\n    for factor, suffix in units:\n        if bytes \u003e= factor:\n            break\n    amount = int(bytes / factor)\n\n    if isinstance(suffix, tuple):\n        singular, multiple = suffix\n        if amount == 1:\n            suffix = singular\n        else:\n            suffix = multiple\n    return str(amount) + suffix\n\n\nif __name__ == \"__main__\":\n    parser = argparse.ArgumentParser(description='''DESCRIPTION:\n    Generate directory index files (recursive is OFF by default).\n    Start from current dir or from folder passed as first positional argument.\n    Optionally filter by file types with --filter \"*.py\". ''')\n\n    parser.add_argument('top_dir',\n                        nargs='?',\n                        action='store',\n                        help='top folder from which to start generating indexes, '\n                             'use current folder if not specified',\n                        default=os.getcwd())\n\n    parser.add_argument('--filter', '-f',\n                        help='only include files matching glob',\n                        required=False)\n\n    parser.add_argument('--output-file', '-o',\n                        metavar='filename',\n                        default=DEFAULT_OUTPUT_FILE,\n                        help=f'Custom output file, by default \"{DEFAULT_OUTPUT_FILE}\"')\n\n    parser.add_argument('--recursive', '-r',\n                        action='store_true',\n                        help=\"recursively process nested dirs (FALSE by default)\",\n                        required=False)\n\n    parser.add_argument('--verbose', '-v',\n                        action='store_true',\n                        help='***WARNING: can take longer time with complex file tree structures on slow terminals***'\n                             ' verbosely list every processed file',\n                        required=False)\n\n    config = parser.parse_args(sys.argv[1:])\n    process_dir(config.top_dir, config)",
            "contentLength": 17585,
            "isShared": true,
            "snippetFileOrder": 0,
            "createdAt": "2021-07-29T09:02:55Z",
            "updatedAt": "2021-07-29T09:02:55Z"
          }
        ]
      }