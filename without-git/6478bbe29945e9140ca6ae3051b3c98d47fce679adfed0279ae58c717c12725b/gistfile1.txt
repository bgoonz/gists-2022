1. Use JSX ShortHand
Try to use JSX shorthand for passing boolean variables. Let’s say you want to control the title visibility of a Navbar component.
Bad

Good

2. Use Ternary Operators
Let’s say you want to show a particular user’s details based on role.
Bad

Good

3. Take Advantage of Object Literals
Object literals can help make our code more readable. Let’s say you want to show three types of users based on their role. You can’t use ternary because the number of options is greater than two.
Bad

Good

It looks much better now.
4. Use Fragments
Always use Fragment over Div. It keeps the code clean and is also beneficial for performance because one less node is created in the virtual DOM.
Bad

Good

5. Don't Define a Function Inside Render
Don’t define a function inside render. Try to keep the logic inside render to an absolute minimum.
Bad

Good

6. Use Memo
React.PureComponent and Memo can significantly improve the performance of your application. They help us to avoid unnecessary rendering.
Bad

Although the child component should render only once because the value of count has nothing to do with the ChildComponent . But, it renders each time you click on the button.
Output
Good
Let’s edit the ChildrenComponent to this:

Now no matter how many times you click on the button, it will render only when necessary.
7. Put CSS in JavaScript
Try to avoid raw JavaScript when you are writing React applications because organizing CSS is far harder than organizing JS.
Bad

Good

8. Use Object Destructuring
Use object destructuring to your advantage. Let’s say you need to show a user’s details.
Bad

Good

9. String Props Don’t Need Curly Braces
When passing string props to a children component.
Bad

Good

10. Remove JS Code From JSX
Move any JS code out of JSX if that doesn’t serve any purpose of rendering or UI functionality.
Bad

Good

11. Use Template Literals
Use template literals to build large strings. Avoid using string concatenation. It’s nice and clean.
Bad

Good

12. Import in Order
Always try to import things in a certain order. It improves code readability.
Bad

Good
The rule of thumb is to keep the import order like this:
Built-in
External
Internal
So the example above becomes:

13. Use Implicit return
Use the JavaScript feature of implicit return to write beautiful code. Let’s say your function does a simple calculation and returns the result.
Bad

Good

14. Component Naming
Always use PascalCase for components and camelCase for instances.
Bad

Good

15. Reserved Prop Naming
Don’t use DOM component prop names for passing props between components because others might not expect these names.
Bad

Good

16. Quotes
Use double quotes for JSX attributes and single quotes for all other JS.
Bad

Good

17. Prop Naming
Always use camelCase for prop names or PascalCase if the prop value is a React component.
Bad

Good

18. JSX in Parentheses
If your component spans more than one line, always wrap it in parentheses.
Bad

Good

19. Self-Closing Tags
If your component doesn’t have any children, then use self-closing tags. It improves readability.
Bad

Good

20. Underscore in Method Name
Do not use underscores in any internal React method.
Bad

Good

21. Alt Prop
Always include an alt prop in your <img > tags. And don’t use picture or image in your alt property because the screenreaders already announce img elements as images. No need to include that.
Bad

Good

